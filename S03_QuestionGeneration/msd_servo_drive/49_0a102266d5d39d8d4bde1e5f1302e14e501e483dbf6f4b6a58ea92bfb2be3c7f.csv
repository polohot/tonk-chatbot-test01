,NODE_FILE_NAME,NODE_NUMBER,NODE_HASH,NODE_TEXT,Q,A1,A2,A3,A4,A5
0,msd_servo_drive.txt,49,0a102266d5d39d8d4bde1e5f1302e14e501e483dbf6f4b6a58ea92bfb2be3c7f,"The fader is activated when the starting and ending speeds are >0 and are plausible relative to each other.

There are two functions each for teaching, calculating and compensation (F1 and F2). This fulfils a series of different requirements:

Two tables each for teaching and compensation:

- One small table with 250 elements each and
- One large table with 4000 elements each.

Input mapping diagram: two different methods for the input reference:

- Input reference ‘fixed' 32-bit: incremental, ‘rotary' recurring position: The entire width of the 32-bit input position has ‘fixed mapping' over the entire ‘width' of the input position.

However, entries are made in the teach table only in the positive direction of travel in this case; in the negative direction of travel, all entries into the teach table are then suppressed.

# Index display: for teaching routine and compensation:

7.3.5.2 Settings for teaching, calculating and compensation

- P 440[0] - CON_TAB_TabIndex: Index of the table

The current table index calculated using the input position is output here both during the teaching routine and the compensation. (The parameter is accessible via the scope.)

(385) __

CON_TCoggTeachCon

# Table value display: for teaching routine and compensation:

- P 446[0] - CON_TAB_OutVal: output value (of the table)

The currently determined table value of the teach table is output here during the teaching routine. The current isq feed forward control value interpolated using the compensation table is output here during the compensation. (The parameter is accessible via the scope.)

|(3)CALC1|= Calc rotary SmallTab, Calc absolute BigTab|
|---|---|
|F1:|rotary, small TeachTab to small CompTab|
|(8)CALC2|F2: absolute, big TeachTab to big CompTab|
|= Calc rotativ BigTab|F1: rotary, big TeachTab to big CompTab|
|(4)RESET|= Reset teach table entries|
| |Reset both teach tables to No-Init-Value (1000.0)|
|(0)READY|= Teaching switched off|

# Access to the compensation tables

- Access to the small compensation table with 250 elements:

Reading and writing using parameter P 380[0..251] - CON_TCoggAddTab[0..251]. As with other parameters as well, saving takes place in the context of the parameter record being saved in the device’s special memory for parameters.

- Access to the large compensation table with 4000 elements:

Offline, i.e. when neither a teaching routine nor compensation are taking place ‘online,' the individual elements of the large compensation table can be accessed using:

|Index:|Reading and writing using parameter P 440[0] - CON_TAB_TabIndex.|
|---|---|
|Value:|Reading and writing using parameter P 441[0] - CON_TAB_TabVal.|
| |Saving takes place in conjunction with the saving of the parameter record in the device’s mass memory (limitation of the max. number of storage cycles).|

# Additional Parameters

|(1)TeachEpsRS-1|= Teach epsrs commutation angle (electrical)|
|---|---|
|- F1:|Small teach table (250)|
|- F1:|Rotary, mapping: fixed 32-bit|
|- F1:|Without teaching direction|
|- F1:|Without offset and delta, with tuning, with fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(1)EPSRS|
| |àsmall CompTab (380)CON_TCoggAddTab|
|(2)TeachEpsRS-2|= Teach epsrs commutation angle (electrical)|
| |as for (1)TeachEpsRS-1|
|(5)TeachUserRefPos|=Teach (277)MPRO_FG_UserRef|
|Pos:|reference position in user units|
|- F2:|Big teach table (4000)|
|- F2:|Absolute, mapping via (443)CON_TAB_PosDelta|
|- F2:|With teaching direction|
|- F2:|Without offset and delta, with tuning, without fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(2)APSPOS|
| |àbig CompTab, access via (440) and (441)|
|(6)TeachEpsM|=Teach epsm mechanical angle (shaft)|

# Table 7.3: Settings for teaching, calculating and compensation

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 118

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

(385) __

# CON_TCoggTeachCon

Singleturn position from encoder for commutation

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachPosEncPcon

Teach posact from pcon encoder

Actual position from encoder for position control in reference value normalization, Scope-Signal 152

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPconEncPos

Teach (412)CON_PCON_ActPosition

Actual position from encoder for position control in reference value normalization

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPosEncRed

Teach posact from redundant encoder

Actual position from so called redundant encoder in ref value normalization, Scope-Signal 153

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachSTPosPcon

Teach singleturn position from position control

Singleturn position of position control

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachEpsRS-3

Teach epsrs commutation angle (electrical)

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441

# Table 7.3:

Settings for teaching, calculating and compensation (continue)

The compensation (feed forward control) is activated using parameter: P 382 [0] - CON_TCoggComp > 0.

# 7.3.5.3 Procedure for detent torque compensation

The following table shows the procedure for detent torque compensation.

MOOG
ID No.:CB40859-001
Date:11/2020

# 7 Control

|No.|Action|
|---|---|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|4|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement Set the input tuning if necessary using:|
|5|P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|6|Start control|
|7|Run motor at low speed (≤ 1 rpm) Set the position source for the teaching, activate teaching: Select|
|8|P 385[0] - CON_TCoggTeachCon > 0. àThe teaching routine begins (possibly only with PosStart, however).|
|9|Move at least 1 motor revolution in the same direction (internal filter time). With the control still operating, the teaching is then stopped by calling the|
|10|calculation function once: P 385[0] - CON_TCoggTeachCon = (3)CALC1 or (8)CALC2. Afterwards, parameter P 385[0] jumps back to READY(0).|

Table 7.4: Overall procedure for detent torque compensation

MSD ServoDrive - DeviceHelp 120

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# MSD ServoDrive - DeviceHelp

No. Action

- The teaching and calculation are thus finished.
- The position source used has been stored internally.
- The compensation table is available for use immediately.

# 11 Stop control

Start the compensation: P 382[0] - CON_TCoggComp &gt; 0

# 12

After this, the q-current feed forward control becomes active when the control is restarted.

Save device data.

# 13

The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.

Image 7.12: After enabling detent torque compensation (with) (please keep the Y axis scaling in mind!)
# 7.3.5.3.1 Scope recording: speed ‘before' and ‘after'

Possible monitoring via scope signal (69) isqref_comp [A]: ref. current from anti-cogging --> in ‘blue' here

A significant improvement in the speed progression is noticeable in the ‘yellow’ scope signal (13): nact [rpm]: cur. speed from filter.

Image 7.11: Before detent torque compensation (without)

# 7.3.5.4 Compensation as a function of the electrical angle

# 7.3.5.5 Compensation as a function of the absolute position

|EPSRS|ABSPOS|
|---|---|
|Teaching routine and compensation à small CompTab (250er)|Teaching routine and compensation à big CompTab (4000)|
|- Incremental, ‘rotary' recurring position|- Absolute, 'linear' continuous position|
|- Without offset and delta, with tuning, with fader|- With offset and delta, with tuning, without fader|
|- (1) Teach epsrs, commutation angle (electrical)|- (3) Teach (277)MPRO_FG_UserRefPos, reference position in user units|
|No. Action|- (7) Teach posact from pcon encoder, actual position from encoder for position control loop in reference scaling, scope signal 152|
| |- (9) Teach (412)CON_PCON_ActPosition, actual position of the position control in reference scaling|
| |- (10) Teach posact from pcon encoder, actual position from so-called redundant encoder in reference scaling, scope signal 153|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
|5|Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon = (1)TeachEpsRS-1.àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|---|Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the compensation table P 380 - CON_TCoggAddTab (small table with 250 elements).|
|8|Stop control|
| |Start the compensation: P 382[0] - CON_TCoggComp = (1)EPSRS|
|9|After this, the q-current feed forward control becomes active when the control is restarted. Save device data.|
|10|- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 122

# 7 Control

# MOOG

ID No.: CB40859-001 Date: 11/2020

# MSD ServoDrive - DeviceHelp

|No.|Action|
|---|---|
|1|Open manual mode window.|
|2|Approach start position|
|3|Speed control mode control setting (set high rigidity, for smooth running)|
|4|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|5|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement = e.g. (endpos inc - startpos inc) / 4000 elements|
|6|Set the input tuning if necessary using: P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|7|Start control|
|8|Run motor at low speed (≤ 1 rpm). Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon= (5)TeachUserRefPos or select|
|9|P 385[0] - CON_TCoggTeachCon= (7)TeachPosEncPcon or select P 385[0] - CON_TCoggTeachCon= (9)TeachPconActPos or select P 385[0] - CON_TCoggTeachCon= (10)TeachPosEncRed. à The teaching routine begins (but only with PosStart).|
|10|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|11|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the internal compensation table (big table with 4000 elements).|
|12|Stop control|
|13|Save device data. - The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner. Use the scope to monitor IsqRef_Comp|
|14|Compensation as a function of mechanical rotation (EPMS) - Incremental, ‘rotary' recurring position - Without offset and delta, with tuning, with fader - (6) Teach epsm mechanical angle (shaft), SingleTurn position from encoder for commutation - (11) Teach singleturn position from position control, SingleTurn position of the position control, + Homing + axis correction - (12) Teach epsrs, commutation angle (electrical)|

# No.  Action

|1|Open manual mode window|
|---|---|
|2|Set the speed control mode (set high stiffness, for radial true running) Set speed control mode.|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
| |Set the position source for the teaching, activate teaching: Select|
|5|P 385[0] - CON_TCoggTeachCon = (6)TeachEpsMor select|
| |P 385[0] - CON_TCoggTeachCon = (11)TeachSTPosPcon. àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
| |Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (8)CALC2. This imports all values into the internal compensation table (big table with 4000 elements).|
|8|Stop control|
|9|Start the compensation: P 382[0] - CON_TCoggComp = (3)EPSM|
|10|Save device data.|
| |- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|
|11|Use the scope to monitor IsqRef_Comp|

# 7.3.5.7 Compensation as a function of the electrical angle (EPSRS), big table

Teaching routine and compensation à big CompTab (4000)

- Incremental, ‘rotary' recurring position
- Without offset and delta, with tuning, with fader

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 124

# 7 Control

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# 7.3.5.8 FadeOut function

Adaptation of torque control / Saturation characteristic (see Section ""Adaptation of torque control"" on page 125).

At higher speeds it usually makes sense to linearly fade the Q-current feed forward control of the detent torque compensation using the FadeOut function:

- P 447[3] - CON_TAB_Tune[3].FadeOutStart: fader starting speed
- P 447[4] - CON_TAB_Tune[4].FadeOutEnd: fader ending speed.

FadeStartSpeed

|100 %|Rastmoment-|kompensation|cogging|compensation|
|---|---|---|---|---|
|0 %| | | | |

Image 7.15: Structure of expanded torque control

FadeEndSpeed

# 7.3.6 Advanced torque control

Torque control is expanded by three functions in order to optimize the control dynamics of the current and speed controllers.

# 7.3.6.1 Adaptation of torque control

# 7.3.6.1.1 Saturation characteristic

In the overload range, saturation effects reduce the inductance of many motors. As a result, the current controller optimized to the rated current may oscillate or become unstable. In this case the gain of the current controller should be adapted to the load case by way of four interpolation points. The values for the interpolation points are entered in the screen as a percentage of the rated current. On the left are the inductance values, and on the right the values for the overload (> 100% of rated current).

# Inductance [%]

|Index [0]|100 %|
|---|---|
|Index [1]|90 %|
|Index [2]|68 %|
|Index [3]|31 %|

# Rated current

|Irated [4]|Irated [6]|[%]|
|---|---|---|
|Irated [5]|Irated [7]| |

Image 7.16: “PS motor electrical parameters” screen

Image 7.17: Diagram: “Scaling of q-inductance L in [%]”

- ① P 472[0] - [3] Lsig_q@Ix Scaling of q-stator inductance in [%]; interpolation points 0 to 3.
- ② P 472[4] - [7] MOT_CurrentIx Scaling of rated current in [%]; interpolation points 4 to 7.

# Legend for Diagram: “Scaling of q-inductance L in [%]”

NOTE

l Between the interpolation points the scaling factor is interpolated in linear mode. The current scaling of the inductance is displayed in the scope variable 74_Is_ActVal.

MOOG ID No.",Under what conditions is the fader activated in the MSD ServoDrive system?,The fader is activated when both the starting and ending speeds are greater than 0 and are plausible relative to each other.,Activation occurs if starting and ending speeds exceed zero and their relationship is plausible.,"For fader activation in MSD ServoDrive, starting and ending speeds must be >0 and plausibly related.",The system requires starting and ending speeds above zero with a plausible ratio for fader activation.,Fader activation in the MSD ServoDrive is contingent on plausible starting and ending speeds both being greater than zero.
1,msd_servo_drive.txt,49,0a102266d5d39d8d4bde1e5f1302e14e501e483dbf6f4b6a58ea92bfb2be3c7f,"The fader is activated when the starting and ending speeds are >0 and are plausible relative to each other.

There are two functions each for teaching, calculating and compensation (F1 and F2). This fulfils a series of different requirements:

Two tables each for teaching and compensation:

- One small table with 250 elements each and
- One large table with 4000 elements each.

Input mapping diagram: two different methods for the input reference:

- Input reference ‘fixed' 32-bit: incremental, ‘rotary' recurring position: The entire width of the 32-bit input position has ‘fixed mapping' over the entire ‘width' of the input position.

However, entries are made in the teach table only in the positive direction of travel in this case; in the negative direction of travel, all entries into the teach table are then suppressed.

# Index display: for teaching routine and compensation:

7.3.5.2 Settings for teaching, calculating and compensation

- P 440[0] - CON_TAB_TabIndex: Index of the table

The current table index calculated using the input position is output here both during the teaching routine and the compensation. (The parameter is accessible via the scope.)

(385) __

CON_TCoggTeachCon

# Table value display: for teaching routine and compensation:

- P 446[0] - CON_TAB_OutVal: output value (of the table)

The currently determined table value of the teach table is output here during the teaching routine. The current isq feed forward control value interpolated using the compensation table is output here during the compensation. (The parameter is accessible via the scope.)

|(3)CALC1|= Calc rotary SmallTab, Calc absolute BigTab|
|---|---|
|F1:|rotary, small TeachTab to small CompTab|
|(8)CALC2|F2: absolute, big TeachTab to big CompTab|
|= Calc rotativ BigTab|F1: rotary, big TeachTab to big CompTab|
|(4)RESET|= Reset teach table entries|
| |Reset both teach tables to No-Init-Value (1000.0)|
|(0)READY|= Teaching switched off|

# Access to the compensation tables

- Access to the small compensation table with 250 elements:

Reading and writing using parameter P 380[0..251] - CON_TCoggAddTab[0..251]. As with other parameters as well, saving takes place in the context of the parameter record being saved in the device’s special memory for parameters.

- Access to the large compensation table with 4000 elements:

Offline, i.e. when neither a teaching routine nor compensation are taking place ‘online,' the individual elements of the large compensation table can be accessed using:

|Index:|Reading and writing using parameter P 440[0] - CON_TAB_TabIndex.|
|---|---|
|Value:|Reading and writing using parameter P 441[0] - CON_TAB_TabVal.|
| |Saving takes place in conjunction with the saving of the parameter record in the device’s mass memory (limitation of the max. number of storage cycles).|

# Additional Parameters

|(1)TeachEpsRS-1|= Teach epsrs commutation angle (electrical)|
|---|---|
|- F1:|Small teach table (250)|
|- F1:|Rotary, mapping: fixed 32-bit|
|- F1:|Without teaching direction|
|- F1:|Without offset and delta, with tuning, with fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(1)EPSRS|
| |àsmall CompTab (380)CON_TCoggAddTab|
|(2)TeachEpsRS-2|= Teach epsrs commutation angle (electrical)|
| |as for (1)TeachEpsRS-1|
|(5)TeachUserRefPos|=Teach (277)MPRO_FG_UserRef|
|Pos:|reference position in user units|
|- F2:|Big teach table (4000)|
|- F2:|Absolute, mapping via (443)CON_TAB_PosDelta|
|- F2:|With teaching direction|
|- F2:|Without offset and delta, with tuning, without fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(2)APSPOS|
| |àbig CompTab, access via (440) and (441)|
|(6)TeachEpsM|=Teach epsm mechanical angle (shaft)|

# Table 7.3: Settings for teaching, calculating and compensation

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 118

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

(385) __

# CON_TCoggTeachCon

Singleturn position from encoder for commutation

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachPosEncPcon

Teach posact from pcon encoder

Actual position from encoder for position control in reference value normalization, Scope-Signal 152

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPconEncPos

Teach (412)CON_PCON_ActPosition

Actual position from encoder for position control in reference value normalization

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPosEncRed

Teach posact from redundant encoder

Actual position from so called redundant encoder in ref value normalization, Scope-Signal 153

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachSTPosPcon

Teach singleturn position from position control

Singleturn position of position control

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachEpsRS-3

Teach epsrs commutation angle (electrical)

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441

# Table 7.3:

Settings for teaching, calculating and compensation (continue)

The compensation (feed forward control) is activated using parameter: P 382 [0] - CON_TCoggComp > 0.

# 7.3.5.3 Procedure for detent torque compensation

The following table shows the procedure for detent torque compensation.

MOOG
ID No.:CB40859-001
Date:11/2020

# 7 Control

|No.|Action|
|---|---|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|4|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement Set the input tuning if necessary using:|
|5|P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|6|Start control|
|7|Run motor at low speed (≤ 1 rpm) Set the position source for the teaching, activate teaching: Select|
|8|P 385[0] - CON_TCoggTeachCon > 0. àThe teaching routine begins (possibly only with PosStart, however).|
|9|Move at least 1 motor revolution in the same direction (internal filter time). With the control still operating, the teaching is then stopped by calling the|
|10|calculation function once: P 385[0] - CON_TCoggTeachCon = (3)CALC1 or (8)CALC2. Afterwards, parameter P 385[0] jumps back to READY(0).|

Table 7.4: Overall procedure for detent torque compensation

MSD ServoDrive - DeviceHelp 120

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# MSD ServoDrive - DeviceHelp

No. Action

- The teaching and calculation are thus finished.
- The position source used has been stored internally.
- The compensation table is available for use immediately.

# 11 Stop control

Start the compensation: P 382[0] - CON_TCoggComp &gt; 0

# 12

After this, the q-current feed forward control becomes active when the control is restarted.

Save device data.

# 13

The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.

Image 7.12: After enabling detent torque compensation (with) (please keep the Y axis scaling in mind!)
# 7.3.5.3.1 Scope recording: speed ‘before' and ‘after'

Possible monitoring via scope signal (69) isqref_comp [A]: ref. current from anti-cogging --> in ‘blue' here

A significant improvement in the speed progression is noticeable in the ‘yellow’ scope signal (13): nact [rpm]: cur. speed from filter.

Image 7.11: Before detent torque compensation (without)

# 7.3.5.4 Compensation as a function of the electrical angle

# 7.3.5.5 Compensation as a function of the absolute position

|EPSRS|ABSPOS|
|---|---|
|Teaching routine and compensation à small CompTab (250er)|Teaching routine and compensation à big CompTab (4000)|
|- Incremental, ‘rotary' recurring position|- Absolute, 'linear' continuous position|
|- Without offset and delta, with tuning, with fader|- With offset and delta, with tuning, without fader|
|- (1) Teach epsrs, commutation angle (electrical)|- (3) Teach (277)MPRO_FG_UserRefPos, reference position in user units|
|No. Action|- (7) Teach posact from pcon encoder, actual position from encoder for position control loop in reference scaling, scope signal 152|
| |- (9) Teach (412)CON_PCON_ActPosition, actual position of the position control in reference scaling|
| |- (10) Teach posact from pcon encoder, actual position from so-called redundant encoder in reference scaling, scope signal 153|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
|5|Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon = (1)TeachEpsRS-1.àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|---|Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the compensation table P 380 - CON_TCoggAddTab (small table with 250 elements).|
|8|Stop control|
| |Start the compensation: P 382[0] - CON_TCoggComp = (1)EPSRS|
|9|After this, the q-current feed forward control becomes active when the control is restarted. Save device data.|
|10|- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 122

# 7 Control

# MOOG

ID No.: CB40859-001 Date: 11/2020

# MSD ServoDrive - DeviceHelp

|No.|Action|
|---|---|
|1|Open manual mode window.|
|2|Approach start position|
|3|Speed control mode control setting (set high rigidity, for smooth running)|
|4|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|5|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement = e.g. (endpos inc - startpos inc) / 4000 elements|
|6|Set the input tuning if necessary using: P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|7|Start control|
|8|Run motor at low speed (≤ 1 rpm). Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon= (5)TeachUserRefPos or select|
|9|P 385[0] - CON_TCoggTeachCon= (7)TeachPosEncPcon or select P 385[0] - CON_TCoggTeachCon= (9)TeachPconActPos or select P 385[0] - CON_TCoggTeachCon= (10)TeachPosEncRed. à The teaching routine begins (but only with PosStart).|
|10|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|11|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the internal compensation table (big table with 4000 elements).|
|12|Stop control|
|13|Save device data. - The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner. Use the scope to monitor IsqRef_Comp|
|14|Compensation as a function of mechanical rotation (EPMS) - Incremental, ‘rotary' recurring position - Without offset and delta, with tuning, with fader - (6) Teach epsm mechanical angle (shaft), SingleTurn position from encoder for commutation - (11) Teach singleturn position from position control, SingleTurn position of the position control, + Homing + axis correction - (12) Teach epsrs, commutation angle (electrical)|

# No.  Action

|1|Open manual mode window|
|---|---|
|2|Set the speed control mode (set high stiffness, for radial true running) Set speed control mode.|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
| |Set the position source for the teaching, activate teaching: Select|
|5|P 385[0] - CON_TCoggTeachCon = (6)TeachEpsMor select|
| |P 385[0] - CON_TCoggTeachCon = (11)TeachSTPosPcon. àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
| |Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (8)CALC2. This imports all values into the internal compensation table (big table with 4000 elements).|
|8|Stop control|
|9|Start the compensation: P 382[0] - CON_TCoggComp = (3)EPSM|
|10|Save device data.|
| |- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|
|11|Use the scope to monitor IsqRef_Comp|

# 7.3.5.7 Compensation as a function of the electrical angle (EPSRS), big table

Teaching routine and compensation à big CompTab (4000)

- Incremental, ‘rotary' recurring position
- Without offset and delta, with tuning, with fader

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 124

# 7 Control

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# 7.3.5.8 FadeOut function

Adaptation of torque control / Saturation characteristic (see Section ""Adaptation of torque control"" on page 125).

At higher speeds it usually makes sense to linearly fade the Q-current feed forward control of the detent torque compensation using the FadeOut function:

- P 447[3] - CON_TAB_Tune[3].FadeOutStart: fader starting speed
- P 447[4] - CON_TAB_Tune[4].FadeOutEnd: fader ending speed.

FadeStartSpeed

|100 %|Rastmoment-|kompensation|cogging|compensation|
|---|---|---|---|---|
|0 %| | | | |

Image 7.15: Structure of expanded torque control

FadeEndSpeed

# 7.3.6 Advanced torque control

Torque control is expanded by three functions in order to optimize the control dynamics of the current and speed controllers.

# 7.3.6.1 Adaptation of torque control

# 7.3.6.1.1 Saturation characteristic

In the overload range, saturation effects reduce the inductance of many motors. As a result, the current controller optimized to the rated current may oscillate or become unstable. In this case the gain of the current controller should be adapted to the load case by way of four interpolation points. The values for the interpolation points are entered in the screen as a percentage of the rated current. On the left are the inductance values, and on the right the values for the overload (> 100% of rated current).

# Inductance [%]

|Index [0]|100 %|
|---|---|
|Index [1]|90 %|
|Index [2]|68 %|
|Index [3]|31 %|

# Rated current

|Irated [4]|Irated [6]|[%]|
|---|---|---|
|Irated [5]|Irated [7]| |

Image 7.16: “PS motor electrical parameters” screen

Image 7.17: Diagram: “Scaling of q-inductance L in [%]”

- ① P 472[0] - [3] Lsig_q@Ix Scaling of q-stator inductance in [%]; interpolation points 0 to 3.
- ② P 472[4] - [7] MOT_CurrentIx Scaling of rated current in [%]; interpolation points 4 to 7.

# Legend for Diagram: “Scaling of q-inductance L in [%]”

NOTE

l Between the interpolation points the scaling factor is interpolated in linear mode. The current scaling of the inductance is displayed in the scope variable 74_Is_ActVal.

MOOG ID No.",What are the two types of tables used for teaching and compensation in the MSD ServoDrive?,There are two tables: one small with 250 elements and one large with 4000 elements for both teaching and compensation.,The system utilizes a small table (250 elements) and a large table (4000 elements) for teaching and compensation tasks.,"For teaching and compensation, MSD ServoDrive employs a 250-element small table and a 4000-element large table.","Two table sizes are used: small (250 elements) and large (4000 elements), each for teaching and compensation.",MSD ServoDrive's teaching and compensation functions rely on a small table of 250 elements and a large one of 4000 elements.
2,msd_servo_drive.txt,49,0a102266d5d39d8d4bde1e5f1302e14e501e483dbf6f4b6a58ea92bfb2be3c7f,"The fader is activated when the starting and ending speeds are >0 and are plausible relative to each other.

There are two functions each for teaching, calculating and compensation (F1 and F2). This fulfils a series of different requirements:

Two tables each for teaching and compensation:

- One small table with 250 elements each and
- One large table with 4000 elements each.

Input mapping diagram: two different methods for the input reference:

- Input reference ‘fixed' 32-bit: incremental, ‘rotary' recurring position: The entire width of the 32-bit input position has ‘fixed mapping' over the entire ‘width' of the input position.

However, entries are made in the teach table only in the positive direction of travel in this case; in the negative direction of travel, all entries into the teach table are then suppressed.

# Index display: for teaching routine and compensation:

7.3.5.2 Settings for teaching, calculating and compensation

- P 440[0] - CON_TAB_TabIndex: Index of the table

The current table index calculated using the input position is output here both during the teaching routine and the compensation. (The parameter is accessible via the scope.)

(385) __

CON_TCoggTeachCon

# Table value display: for teaching routine and compensation:

- P 446[0] - CON_TAB_OutVal: output value (of the table)

The currently determined table value of the teach table is output here during the teaching routine. The current isq feed forward control value interpolated using the compensation table is output here during the compensation. (The parameter is accessible via the scope.)

|(3)CALC1|= Calc rotary SmallTab, Calc absolute BigTab|
|---|---|
|F1:|rotary, small TeachTab to small CompTab|
|(8)CALC2|F2: absolute, big TeachTab to big CompTab|
|= Calc rotativ BigTab|F1: rotary, big TeachTab to big CompTab|
|(4)RESET|= Reset teach table entries|
| |Reset both teach tables to No-Init-Value (1000.0)|
|(0)READY|= Teaching switched off|

# Access to the compensation tables

- Access to the small compensation table with 250 elements:

Reading and writing using parameter P 380[0..251] - CON_TCoggAddTab[0..251]. As with other parameters as well, saving takes place in the context of the parameter record being saved in the device’s special memory for parameters.

- Access to the large compensation table with 4000 elements:

Offline, i.e. when neither a teaching routine nor compensation are taking place ‘online,' the individual elements of the large compensation table can be accessed using:

|Index:|Reading and writing using parameter P 440[0] - CON_TAB_TabIndex.|
|---|---|
|Value:|Reading and writing using parameter P 441[0] - CON_TAB_TabVal.|
| |Saving takes place in conjunction with the saving of the parameter record in the device’s mass memory (limitation of the max. number of storage cycles).|

# Additional Parameters

|(1)TeachEpsRS-1|= Teach epsrs commutation angle (electrical)|
|---|---|
|- F1:|Small teach table (250)|
|- F1:|Rotary, mapping: fixed 32-bit|
|- F1:|Without teaching direction|
|- F1:|Without offset and delta, with tuning, with fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(1)EPSRS|
| |àsmall CompTab (380)CON_TCoggAddTab|
|(2)TeachEpsRS-2|= Teach epsrs commutation angle (electrical)|
| |as for (1)TeachEpsRS-1|
|(5)TeachUserRefPos|=Teach (277)MPRO_FG_UserRef|
|Pos:|reference position in user units|
|- F2:|Big teach table (4000)|
|- F2:|Absolute, mapping via (443)CON_TAB_PosDelta|
|- F2:|With teaching direction|
|- F2:|Without offset and delta, with tuning, without fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(2)APSPOS|
| |àbig CompTab, access via (440) and (441)|
|(6)TeachEpsM|=Teach epsm mechanical angle (shaft)|

# Table 7.3: Settings for teaching, calculating and compensation

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 118

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

(385) __

# CON_TCoggTeachCon

Singleturn position from encoder for commutation

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachPosEncPcon

Teach posact from pcon encoder

Actual position from encoder for position control in reference value normalization, Scope-Signal 152

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPconEncPos

Teach (412)CON_PCON_ActPosition

Actual position from encoder for position control in reference value normalization

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPosEncRed

Teach posact from redundant encoder

Actual position from so called redundant encoder in ref value normalization, Scope-Signal 153

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachSTPosPcon

Teach singleturn position from position control

Singleturn position of position control

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachEpsRS-3

Teach epsrs commutation angle (electrical)

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441

# Table 7.3:

Settings for teaching, calculating and compensation (continue)

The compensation (feed forward control) is activated using parameter: P 382 [0] - CON_TCoggComp > 0.

# 7.3.5.3 Procedure for detent torque compensation

The following table shows the procedure for detent torque compensation.

MOOG
ID No.:CB40859-001
Date:11/2020

# 7 Control

|No.|Action|
|---|---|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|4|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement Set the input tuning if necessary using:|
|5|P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|6|Start control|
|7|Run motor at low speed (≤ 1 rpm) Set the position source for the teaching, activate teaching: Select|
|8|P 385[0] - CON_TCoggTeachCon > 0. àThe teaching routine begins (possibly only with PosStart, however).|
|9|Move at least 1 motor revolution in the same direction (internal filter time). With the control still operating, the teaching is then stopped by calling the|
|10|calculation function once: P 385[0] - CON_TCoggTeachCon = (3)CALC1 or (8)CALC2. Afterwards, parameter P 385[0] jumps back to READY(0).|

Table 7.4: Overall procedure for detent torque compensation

MSD ServoDrive - DeviceHelp 120

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# MSD ServoDrive - DeviceHelp

No. Action

- The teaching and calculation are thus finished.
- The position source used has been stored internally.
- The compensation table is available for use immediately.

# 11 Stop control

Start the compensation: P 382[0] - CON_TCoggComp &gt; 0

# 12

After this, the q-current feed forward control becomes active when the control is restarted.

Save device data.

# 13

The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.

Image 7.12: After enabling detent torque compensation (with) (please keep the Y axis scaling in mind!)
# 7.3.5.3.1 Scope recording: speed ‘before' and ‘after'

Possible monitoring via scope signal (69) isqref_comp [A]: ref. current from anti-cogging --> in ‘blue' here

A significant improvement in the speed progression is noticeable in the ‘yellow’ scope signal (13): nact [rpm]: cur. speed from filter.

Image 7.11: Before detent torque compensation (without)

# 7.3.5.4 Compensation as a function of the electrical angle

# 7.3.5.5 Compensation as a function of the absolute position

|EPSRS|ABSPOS|
|---|---|
|Teaching routine and compensation à small CompTab (250er)|Teaching routine and compensation à big CompTab (4000)|
|- Incremental, ‘rotary' recurring position|- Absolute, 'linear' continuous position|
|- Without offset and delta, with tuning, with fader|- With offset and delta, with tuning, without fader|
|- (1) Teach epsrs, commutation angle (electrical)|- (3) Teach (277)MPRO_FG_UserRefPos, reference position in user units|
|No. Action|- (7) Teach posact from pcon encoder, actual position from encoder for position control loop in reference scaling, scope signal 152|
| |- (9) Teach (412)CON_PCON_ActPosition, actual position of the position control in reference scaling|
| |- (10) Teach posact from pcon encoder, actual position from so-called redundant encoder in reference scaling, scope signal 153|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
|5|Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon = (1)TeachEpsRS-1.àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|---|Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the compensation table P 380 - CON_TCoggAddTab (small table with 250 elements).|
|8|Stop control|
| |Start the compensation: P 382[0] - CON_TCoggComp = (1)EPSRS|
|9|After this, the q-current feed forward control becomes active when the control is restarted. Save device data.|
|10|- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 122

# 7 Control

# MOOG

ID No.: CB40859-001 Date: 11/2020

# MSD ServoDrive - DeviceHelp

|No.|Action|
|---|---|
|1|Open manual mode window.|
|2|Approach start position|
|3|Speed control mode control setting (set high rigidity, for smooth running)|
|4|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|5|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement = e.g. (endpos inc - startpos inc) / 4000 elements|
|6|Set the input tuning if necessary using: P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|7|Start control|
|8|Run motor at low speed (≤ 1 rpm). Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon= (5)TeachUserRefPos or select|
|9|P 385[0] - CON_TCoggTeachCon= (7)TeachPosEncPcon or select P 385[0] - CON_TCoggTeachCon= (9)TeachPconActPos or select P 385[0] - CON_TCoggTeachCon= (10)TeachPosEncRed. à The teaching routine begins (but only with PosStart).|
|10|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|11|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the internal compensation table (big table with 4000 elements).|
|12|Stop control|
|13|Save device data. - The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner. Use the scope to monitor IsqRef_Comp|
|14|Compensation as a function of mechanical rotation (EPMS) - Incremental, ‘rotary' recurring position - Without offset and delta, with tuning, with fader - (6) Teach epsm mechanical angle (shaft), SingleTurn position from encoder for commutation - (11) Teach singleturn position from position control, SingleTurn position of the position control, + Homing + axis correction - (12) Teach epsrs, commutation angle (electrical)|

# No.  Action

|1|Open manual mode window|
|---|---|
|2|Set the speed control mode (set high stiffness, for radial true running) Set speed control mode.|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
| |Set the position source for the teaching, activate teaching: Select|
|5|P 385[0] - CON_TCoggTeachCon = (6)TeachEpsMor select|
| |P 385[0] - CON_TCoggTeachCon = (11)TeachSTPosPcon. àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
| |Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (8)CALC2. This imports all values into the internal compensation table (big table with 4000 elements).|
|8|Stop control|
|9|Start the compensation: P 382[0] - CON_TCoggComp = (3)EPSM|
|10|Save device data.|
| |- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|
|11|Use the scope to monitor IsqRef_Comp|

# 7.3.5.7 Compensation as a function of the electrical angle (EPSRS), big table

Teaching routine and compensation à big CompTab (4000)

- Incremental, ‘rotary' recurring position
- Without offset and delta, with tuning, with fader

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 124

# 7 Control

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# 7.3.5.8 FadeOut function

Adaptation of torque control / Saturation characteristic (see Section ""Adaptation of torque control"" on page 125).

At higher speeds it usually makes sense to linearly fade the Q-current feed forward control of the detent torque compensation using the FadeOut function:

- P 447[3] - CON_TAB_Tune[3].FadeOutStart: fader starting speed
- P 447[4] - CON_TAB_Tune[4].FadeOutEnd: fader ending speed.

FadeStartSpeed

|100 %|Rastmoment-|kompensation|cogging|compensation|
|---|---|---|---|---|
|0 %| | | | |

Image 7.15: Structure of expanded torque control

FadeEndSpeed

# 7.3.6 Advanced torque control

Torque control is expanded by three functions in order to optimize the control dynamics of the current and speed controllers.

# 7.3.6.1 Adaptation of torque control

# 7.3.6.1.1 Saturation characteristic

In the overload range, saturation effects reduce the inductance of many motors. As a result, the current controller optimized to the rated current may oscillate or become unstable. In this case the gain of the current controller should be adapted to the load case by way of four interpolation points. The values for the interpolation points are entered in the screen as a percentage of the rated current. On the left are the inductance values, and on the right the values for the overload (> 100% of rated current).

# Inductance [%]

|Index [0]|100 %|
|---|---|
|Index [1]|90 %|
|Index [2]|68 %|
|Index [3]|31 %|

# Rated current

|Irated [4]|Irated [6]|[%]|
|---|---|---|
|Irated [5]|Irated [7]| |

Image 7.16: “PS motor electrical parameters” screen

Image 7.17: Diagram: “Scaling of q-inductance L in [%]”

- ① P 472[0] - [3] Lsig_q@Ix Scaling of q-stator inductance in [%]; interpolation points 0 to 3.
- ② P 472[4] - [7] MOT_CurrentIx Scaling of rated current in [%]; interpolation points 4 to 7.

# Legend for Diagram: “Scaling of q-inductance L in [%]”

NOTE

l Between the interpolation points the scaling factor is interpolated in linear mode. The current scaling of the inductance is displayed in the scope variable 74_Is_ActVal.

MOOG ID No.",How is the input reference mapped in the MSD ServoDrive system?,"Input reference is mapped via two methods: 'fixed' 32-bit incremental and 'rotary' recurring position, covering the entire width of the input position.",The system supports two input reference mapping methods: a fixed 32-bit incremental and a rotary recurring position approach.,"Mapping involves a fixed 32-bit incremental and a rotary recurring position method, spanning the full input position width.",Two mapping techniques are used: fixed 32-bit for incremental and rotary for recurring positions across the input's entire width.,"In MSD ServoDrive, input reference mapping is achieved through fixed 32-bit incremental and rotary recurring position methods."
3,msd_servo_drive.txt,49,0a102266d5d39d8d4bde1e5f1302e14e501e483dbf6f4b6a58ea92bfb2be3c7f,"The fader is activated when the starting and ending speeds are >0 and are plausible relative to each other.

There are two functions each for teaching, calculating and compensation (F1 and F2). This fulfils a series of different requirements:

Two tables each for teaching and compensation:

- One small table with 250 elements each and
- One large table with 4000 elements each.

Input mapping diagram: two different methods for the input reference:

- Input reference ‘fixed' 32-bit: incremental, ‘rotary' recurring position: The entire width of the 32-bit input position has ‘fixed mapping' over the entire ‘width' of the input position.

However, entries are made in the teach table only in the positive direction of travel in this case; in the negative direction of travel, all entries into the teach table are then suppressed.

# Index display: for teaching routine and compensation:

7.3.5.2 Settings for teaching, calculating and compensation

- P 440[0] - CON_TAB_TabIndex: Index of the table

The current table index calculated using the input position is output here both during the teaching routine and the compensation. (The parameter is accessible via the scope.)

(385) __

CON_TCoggTeachCon

# Table value display: for teaching routine and compensation:

- P 446[0] - CON_TAB_OutVal: output value (of the table)

The currently determined table value of the teach table is output here during the teaching routine. The current isq feed forward control value interpolated using the compensation table is output here during the compensation. (The parameter is accessible via the scope.)

|(3)CALC1|= Calc rotary SmallTab, Calc absolute BigTab|
|---|---|
|F1:|rotary, small TeachTab to small CompTab|
|(8)CALC2|F2: absolute, big TeachTab to big CompTab|
|= Calc rotativ BigTab|F1: rotary, big TeachTab to big CompTab|
|(4)RESET|= Reset teach table entries|
| |Reset both teach tables to No-Init-Value (1000.0)|
|(0)READY|= Teaching switched off|

# Access to the compensation tables

- Access to the small compensation table with 250 elements:

Reading and writing using parameter P 380[0..251] - CON_TCoggAddTab[0..251]. As with other parameters as well, saving takes place in the context of the parameter record being saved in the device’s special memory for parameters.

- Access to the large compensation table with 4000 elements:

Offline, i.e. when neither a teaching routine nor compensation are taking place ‘online,' the individual elements of the large compensation table can be accessed using:

|Index:|Reading and writing using parameter P 440[0] - CON_TAB_TabIndex.|
|---|---|
|Value:|Reading and writing using parameter P 441[0] - CON_TAB_TabVal.|
| |Saving takes place in conjunction with the saving of the parameter record in the device’s mass memory (limitation of the max. number of storage cycles).|

# Additional Parameters

|(1)TeachEpsRS-1|= Teach epsrs commutation angle (electrical)|
|---|---|
|- F1:|Small teach table (250)|
|- F1:|Rotary, mapping: fixed 32-bit|
|- F1:|Without teaching direction|
|- F1:|Without offset and delta, with tuning, with fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(1)EPSRS|
| |àsmall CompTab (380)CON_TCoggAddTab|
|(2)TeachEpsRS-2|= Teach epsrs commutation angle (electrical)|
| |as for (1)TeachEpsRS-1|
|(5)TeachUserRefPos|=Teach (277)MPRO_FG_UserRef|
|Pos:|reference position in user units|
|- F2:|Big teach table (4000)|
|- F2:|Absolute, mapping via (443)CON_TAB_PosDelta|
|- F2:|With teaching direction|
|- F2:|Without offset and delta, with tuning, without fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(2)APSPOS|
| |àbig CompTab, access via (440) and (441)|
|(6)TeachEpsM|=Teach epsm mechanical angle (shaft)|

# Table 7.3: Settings for teaching, calculating and compensation

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 118

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

(385) __

# CON_TCoggTeachCon

Singleturn position from encoder for commutation

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachPosEncPcon

Teach posact from pcon encoder

Actual position from encoder for position control in reference value normalization, Scope-Signal 152

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPconEncPos

Teach (412)CON_PCON_ActPosition

Actual position from encoder for position control in reference value normalization

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPosEncRed

Teach posact from redundant encoder

Actual position from so called redundant encoder in ref value normalization, Scope-Signal 153

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachSTPosPcon

Teach singleturn position from position control

Singleturn position of position control

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachEpsRS-3

Teach epsrs commutation angle (electrical)

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441

# Table 7.3:

Settings for teaching, calculating and compensation (continue)

The compensation (feed forward control) is activated using parameter: P 382 [0] - CON_TCoggComp > 0.

# 7.3.5.3 Procedure for detent torque compensation

The following table shows the procedure for detent torque compensation.

MOOG
ID No.:CB40859-001
Date:11/2020

# 7 Control

|No.|Action|
|---|---|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|4|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement Set the input tuning if necessary using:|
|5|P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|6|Start control|
|7|Run motor at low speed (≤ 1 rpm) Set the position source for the teaching, activate teaching: Select|
|8|P 385[0] - CON_TCoggTeachCon > 0. àThe teaching routine begins (possibly only with PosStart, however).|
|9|Move at least 1 motor revolution in the same direction (internal filter time). With the control still operating, the teaching is then stopped by calling the|
|10|calculation function once: P 385[0] - CON_TCoggTeachCon = (3)CALC1 or (8)CALC2. Afterwards, parameter P 385[0] jumps back to READY(0).|

Table 7.4: Overall procedure for detent torque compensation

MSD ServoDrive - DeviceHelp 120

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# MSD ServoDrive - DeviceHelp

No. Action

- The teaching and calculation are thus finished.
- The position source used has been stored internally.
- The compensation table is available for use immediately.

# 11 Stop control

Start the compensation: P 382[0] - CON_TCoggComp &gt; 0

# 12

After this, the q-current feed forward control becomes active when the control is restarted.

Save device data.

# 13

The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.

Image 7.12: After enabling detent torque compensation (with) (please keep the Y axis scaling in mind!)
# 7.3.5.3.1 Scope recording: speed ‘before' and ‘after'

Possible monitoring via scope signal (69) isqref_comp [A]: ref. current from anti-cogging --> in ‘blue' here

A significant improvement in the speed progression is noticeable in the ‘yellow’ scope signal (13): nact [rpm]: cur. speed from filter.

Image 7.11: Before detent torque compensation (without)

# 7.3.5.4 Compensation as a function of the electrical angle

# 7.3.5.5 Compensation as a function of the absolute position

|EPSRS|ABSPOS|
|---|---|
|Teaching routine and compensation à small CompTab (250er)|Teaching routine and compensation à big CompTab (4000)|
|- Incremental, ‘rotary' recurring position|- Absolute, 'linear' continuous position|
|- Without offset and delta, with tuning, with fader|- With offset and delta, with tuning, without fader|
|- (1) Teach epsrs, commutation angle (electrical)|- (3) Teach (277)MPRO_FG_UserRefPos, reference position in user units|
|No. Action|- (7) Teach posact from pcon encoder, actual position from encoder for position control loop in reference scaling, scope signal 152|
| |- (9) Teach (412)CON_PCON_ActPosition, actual position of the position control in reference scaling|
| |- (10) Teach posact from pcon encoder, actual position from so-called redundant encoder in reference scaling, scope signal 153|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
|5|Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon = (1)TeachEpsRS-1.àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|---|Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the compensation table P 380 - CON_TCoggAddTab (small table with 250 elements).|
|8|Stop control|
| |Start the compensation: P 382[0] - CON_TCoggComp = (1)EPSRS|
|9|After this, the q-current feed forward control becomes active when the control is restarted. Save device data.|
|10|- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 122

# 7 Control

# MOOG

ID No.: CB40859-001 Date: 11/2020

# MSD ServoDrive - DeviceHelp

|No.|Action|
|---|---|
|1|Open manual mode window.|
|2|Approach start position|
|3|Speed control mode control setting (set high rigidity, for smooth running)|
|4|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|5|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement = e.g. (endpos inc - startpos inc) / 4000 elements|
|6|Set the input tuning if necessary using: P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|7|Start control|
|8|Run motor at low speed (≤ 1 rpm). Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon= (5)TeachUserRefPos or select|
|9|P 385[0] - CON_TCoggTeachCon= (7)TeachPosEncPcon or select P 385[0] - CON_TCoggTeachCon= (9)TeachPconActPos or select P 385[0] - CON_TCoggTeachCon= (10)TeachPosEncRed. à The teaching routine begins (but only with PosStart).|
|10|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|11|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the internal compensation table (big table with 4000 elements).|
|12|Stop control|
|13|Save device data. - The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner. Use the scope to monitor IsqRef_Comp|
|14|Compensation as a function of mechanical rotation (EPMS) - Incremental, ‘rotary' recurring position - Without offset and delta, with tuning, with fader - (6) Teach epsm mechanical angle (shaft), SingleTurn position from encoder for commutation - (11) Teach singleturn position from position control, SingleTurn position of the position control, + Homing + axis correction - (12) Teach epsrs, commutation angle (electrical)|

# No.  Action

|1|Open manual mode window|
|---|---|
|2|Set the speed control mode (set high stiffness, for radial true running) Set speed control mode.|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
| |Set the position source for the teaching, activate teaching: Select|
|5|P 385[0] - CON_TCoggTeachCon = (6)TeachEpsMor select|
| |P 385[0] - CON_TCoggTeachCon = (11)TeachSTPosPcon. àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
| |Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (8)CALC2. This imports all values into the internal compensation table (big table with 4000 elements).|
|8|Stop control|
|9|Start the compensation: P 382[0] - CON_TCoggComp = (3)EPSM|
|10|Save device data.|
| |- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|
|11|Use the scope to monitor IsqRef_Comp|

# 7.3.5.7 Compensation as a function of the electrical angle (EPSRS), big table

Teaching routine and compensation à big CompTab (4000)

- Incremental, ‘rotary' recurring position
- Without offset and delta, with tuning, with fader

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 124

# 7 Control

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# 7.3.5.8 FadeOut function

Adaptation of torque control / Saturation characteristic (see Section ""Adaptation of torque control"" on page 125).

At higher speeds it usually makes sense to linearly fade the Q-current feed forward control of the detent torque compensation using the FadeOut function:

- P 447[3] - CON_TAB_Tune[3].FadeOutStart: fader starting speed
- P 447[4] - CON_TAB_Tune[4].FadeOutEnd: fader ending speed.

FadeStartSpeed

|100 %|Rastmoment-|kompensation|cogging|compensation|
|---|---|---|---|---|
|0 %| | | | |

Image 7.15: Structure of expanded torque control

FadeEndSpeed

# 7.3.6 Advanced torque control

Torque control is expanded by three functions in order to optimize the control dynamics of the current and speed controllers.

# 7.3.6.1 Adaptation of torque control

# 7.3.6.1.1 Saturation characteristic

In the overload range, saturation effects reduce the inductance of many motors. As a result, the current controller optimized to the rated current may oscillate or become unstable. In this case the gain of the current controller should be adapted to the load case by way of four interpolation points. The values for the interpolation points are entered in the screen as a percentage of the rated current. On the left are the inductance values, and on the right the values for the overload (> 100% of rated current).

# Inductance [%]

|Index [0]|100 %|
|---|---|
|Index [1]|90 %|
|Index [2]|68 %|
|Index [3]|31 %|

# Rated current

|Irated [4]|Irated [6]|[%]|
|---|---|---|
|Irated [5]|Irated [7]| |

Image 7.16: “PS motor electrical parameters” screen

Image 7.17: Diagram: “Scaling of q-inductance L in [%]”

- ① P 472[0] - [3] Lsig_q@Ix Scaling of q-stator inductance in [%]; interpolation points 0 to 3.
- ② P 472[4] - [7] MOT_CurrentIx Scaling of rated current in [%]; interpolation points 4 to 7.

# Legend for Diagram: “Scaling of q-inductance L in [%]”

NOTE

l Between the interpolation points the scaling factor is interpolated in linear mode. The current scaling of the inductance is displayed in the scope variable 74_Is_ActVal.

MOOG ID No.",What is the purpose of the P 440[0] parameter in the MSD ServoDrive system?,P 440[0] - CON_TAB_TabIndex outputs the current table index calculated using the input position during teaching and compensation.,"This parameter displays the current table index based on input position, accessible during teaching and compensation routines.","It provides the current table index derived from input position, relevant for both teaching and compensation processes.","During teaching and compensation, P 440[0] shows the table index calculated from the input position.","The parameter P 440[0] is used to output the current table index during teaching and compensation, based on input position."
4,msd_servo_drive.txt,49,0a102266d5d39d8d4bde1e5f1302e14e501e483dbf6f4b6a58ea92bfb2be3c7f,"The fader is activated when the starting and ending speeds are >0 and are plausible relative to each other.

There are two functions each for teaching, calculating and compensation (F1 and F2). This fulfils a series of different requirements:

Two tables each for teaching and compensation:

- One small table with 250 elements each and
- One large table with 4000 elements each.

Input mapping diagram: two different methods for the input reference:

- Input reference ‘fixed' 32-bit: incremental, ‘rotary' recurring position: The entire width of the 32-bit input position has ‘fixed mapping' over the entire ‘width' of the input position.

However, entries are made in the teach table only in the positive direction of travel in this case; in the negative direction of travel, all entries into the teach table are then suppressed.

# Index display: for teaching routine and compensation:

7.3.5.2 Settings for teaching, calculating and compensation

- P 440[0] - CON_TAB_TabIndex: Index of the table

The current table index calculated using the input position is output here both during the teaching routine and the compensation. (The parameter is accessible via the scope.)

(385) __

CON_TCoggTeachCon

# Table value display: for teaching routine and compensation:

- P 446[0] - CON_TAB_OutVal: output value (of the table)

The currently determined table value of the teach table is output here during the teaching routine. The current isq feed forward control value interpolated using the compensation table is output here during the compensation. (The parameter is accessible via the scope.)

|(3)CALC1|= Calc rotary SmallTab, Calc absolute BigTab|
|---|---|
|F1:|rotary, small TeachTab to small CompTab|
|(8)CALC2|F2: absolute, big TeachTab to big CompTab|
|= Calc rotativ BigTab|F1: rotary, big TeachTab to big CompTab|
|(4)RESET|= Reset teach table entries|
| |Reset both teach tables to No-Init-Value (1000.0)|
|(0)READY|= Teaching switched off|

# Access to the compensation tables

- Access to the small compensation table with 250 elements:

Reading and writing using parameter P 380[0..251] - CON_TCoggAddTab[0..251]. As with other parameters as well, saving takes place in the context of the parameter record being saved in the device’s special memory for parameters.

- Access to the large compensation table with 4000 elements:

Offline, i.e. when neither a teaching routine nor compensation are taking place ‘online,' the individual elements of the large compensation table can be accessed using:

|Index:|Reading and writing using parameter P 440[0] - CON_TAB_TabIndex.|
|---|---|
|Value:|Reading and writing using parameter P 441[0] - CON_TAB_TabVal.|
| |Saving takes place in conjunction with the saving of the parameter record in the device’s mass memory (limitation of the max. number of storage cycles).|

# Additional Parameters

|(1)TeachEpsRS-1|= Teach epsrs commutation angle (electrical)|
|---|---|
|- F1:|Small teach table (250)|
|- F1:|Rotary, mapping: fixed 32-bit|
|- F1:|Without teaching direction|
|- F1:|Without offset and delta, with tuning, with fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(1)EPSRS|
| |àsmall CompTab (380)CON_TCoggAddTab|
|(2)TeachEpsRS-2|= Teach epsrs commutation angle (electrical)|
| |as for (1)TeachEpsRS-1|
|(5)TeachUserRefPos|=Teach (277)MPRO_FG_UserRef|
|Pos:|reference position in user units|
|- F2:|Big teach table (4000)|
|- F2:|Absolute, mapping via (443)CON_TAB_PosDelta|
|- F2:|With teaching direction|
|- F2:|Without offset and delta, with tuning, without fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(2)APSPOS|
| |àbig CompTab, access via (440) and (441)|
|(6)TeachEpsM|=Teach epsm mechanical angle (shaft)|

# Table 7.3: Settings for teaching, calculating and compensation

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 118

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

(385) __

# CON_TCoggTeachCon

Singleturn position from encoder for commutation

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachPosEncPcon

Teach posact from pcon encoder

Actual position from encoder for position control in reference value normalization, Scope-Signal 152

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPconEncPos

Teach (412)CON_PCON_ActPosition

Actual position from encoder for position control in reference value normalization

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPosEncRed

Teach posact from redundant encoder

Actual position from so called redundant encoder in ref value normalization, Scope-Signal 153

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachSTPosPcon

Teach singleturn position from position control

Singleturn position of position control

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachEpsRS-3

Teach epsrs commutation angle (electrical)

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441

# Table 7.3:

Settings for teaching, calculating and compensation (continue)

The compensation (feed forward control) is activated using parameter: P 382 [0] - CON_TCoggComp > 0.

# 7.3.5.3 Procedure for detent torque compensation

The following table shows the procedure for detent torque compensation.

MOOG
ID No.:CB40859-001
Date:11/2020

# 7 Control

|No.|Action|
|---|---|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|4|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement Set the input tuning if necessary using:|
|5|P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|6|Start control|
|7|Run motor at low speed (≤ 1 rpm) Set the position source for the teaching, activate teaching: Select|
|8|P 385[0] - CON_TCoggTeachCon > 0. àThe teaching routine begins (possibly only with PosStart, however).|
|9|Move at least 1 motor revolution in the same direction (internal filter time). With the control still operating, the teaching is then stopped by calling the|
|10|calculation function once: P 385[0] - CON_TCoggTeachCon = (3)CALC1 or (8)CALC2. Afterwards, parameter P 385[0] jumps back to READY(0).|

Table 7.4: Overall procedure for detent torque compensation

MSD ServoDrive - DeviceHelp 120

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# MSD ServoDrive - DeviceHelp

No. Action

- The teaching and calculation are thus finished.
- The position source used has been stored internally.
- The compensation table is available for use immediately.

# 11 Stop control

Start the compensation: P 382[0] - CON_TCoggComp &gt; 0

# 12

After this, the q-current feed forward control becomes active when the control is restarted.

Save device data.

# 13

The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.

Image 7.12: After enabling detent torque compensation (with) (please keep the Y axis scaling in mind!)
# 7.3.5.3.1 Scope recording: speed ‘before' and ‘after'

Possible monitoring via scope signal (69) isqref_comp [A]: ref. current from anti-cogging --> in ‘blue' here

A significant improvement in the speed progression is noticeable in the ‘yellow’ scope signal (13): nact [rpm]: cur. speed from filter.

Image 7.11: Before detent torque compensation (without)

# 7.3.5.4 Compensation as a function of the electrical angle

# 7.3.5.5 Compensation as a function of the absolute position

|EPSRS|ABSPOS|
|---|---|
|Teaching routine and compensation à small CompTab (250er)|Teaching routine and compensation à big CompTab (4000)|
|- Incremental, ‘rotary' recurring position|- Absolute, 'linear' continuous position|
|- Without offset and delta, with tuning, with fader|- With offset and delta, with tuning, without fader|
|- (1) Teach epsrs, commutation angle (electrical)|- (3) Teach (277)MPRO_FG_UserRefPos, reference position in user units|
|No. Action|- (7) Teach posact from pcon encoder, actual position from encoder for position control loop in reference scaling, scope signal 152|
| |- (9) Teach (412)CON_PCON_ActPosition, actual position of the position control in reference scaling|
| |- (10) Teach posact from pcon encoder, actual position from so-called redundant encoder in reference scaling, scope signal 153|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
|5|Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon = (1)TeachEpsRS-1.àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|---|Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the compensation table P 380 - CON_TCoggAddTab (small table with 250 elements).|
|8|Stop control|
| |Start the compensation: P 382[0] - CON_TCoggComp = (1)EPSRS|
|9|After this, the q-current feed forward control becomes active when the control is restarted. Save device data.|
|10|- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 122

# 7 Control

# MOOG

ID No.: CB40859-001 Date: 11/2020

# MSD ServoDrive - DeviceHelp

|No.|Action|
|---|---|
|1|Open manual mode window.|
|2|Approach start position|
|3|Speed control mode control setting (set high rigidity, for smooth running)|
|4|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|5|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement = e.g. (endpos inc - startpos inc) / 4000 elements|
|6|Set the input tuning if necessary using: P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|7|Start control|
|8|Run motor at low speed (≤ 1 rpm). Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon= (5)TeachUserRefPos or select|
|9|P 385[0] - CON_TCoggTeachCon= (7)TeachPosEncPcon or select P 385[0] - CON_TCoggTeachCon= (9)TeachPconActPos or select P 385[0] - CON_TCoggTeachCon= (10)TeachPosEncRed. à The teaching routine begins (but only with PosStart).|
|10|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|11|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the internal compensation table (big table with 4000 elements).|
|12|Stop control|
|13|Save device data. - The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner. Use the scope to monitor IsqRef_Comp|
|14|Compensation as a function of mechanical rotation (EPMS) - Incremental, ‘rotary' recurring position - Without offset and delta, with tuning, with fader - (6) Teach epsm mechanical angle (shaft), SingleTurn position from encoder for commutation - (11) Teach singleturn position from position control, SingleTurn position of the position control, + Homing + axis correction - (12) Teach epsrs, commutation angle (electrical)|

# No.  Action

|1|Open manual mode window|
|---|---|
|2|Set the speed control mode (set high stiffness, for radial true running) Set speed control mode.|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
| |Set the position source for the teaching, activate teaching: Select|
|5|P 385[0] - CON_TCoggTeachCon = (6)TeachEpsMor select|
| |P 385[0] - CON_TCoggTeachCon = (11)TeachSTPosPcon. àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
| |Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (8)CALC2. This imports all values into the internal compensation table (big table with 4000 elements).|
|8|Stop control|
|9|Start the compensation: P 382[0] - CON_TCoggComp = (3)EPSM|
|10|Save device data.|
| |- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|
|11|Use the scope to monitor IsqRef_Comp|

# 7.3.5.7 Compensation as a function of the electrical angle (EPSRS), big table

Teaching routine and compensation à big CompTab (4000)

- Incremental, ‘rotary' recurring position
- Without offset and delta, with tuning, with fader

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 124

# 7 Control

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# 7.3.5.8 FadeOut function

Adaptation of torque control / Saturation characteristic (see Section ""Adaptation of torque control"" on page 125).

At higher speeds it usually makes sense to linearly fade the Q-current feed forward control of the detent torque compensation using the FadeOut function:

- P 447[3] - CON_TAB_Tune[3].FadeOutStart: fader starting speed
- P 447[4] - CON_TAB_Tune[4].FadeOutEnd: fader ending speed.

FadeStartSpeed

|100 %|Rastmoment-|kompensation|cogging|compensation|
|---|---|---|---|---|
|0 %| | | | |

Image 7.15: Structure of expanded torque control

FadeEndSpeed

# 7.3.6 Advanced torque control

Torque control is expanded by three functions in order to optimize the control dynamics of the current and speed controllers.

# 7.3.6.1 Adaptation of torque control

# 7.3.6.1.1 Saturation characteristic

In the overload range, saturation effects reduce the inductance of many motors. As a result, the current controller optimized to the rated current may oscillate or become unstable. In this case the gain of the current controller should be adapted to the load case by way of four interpolation points. The values for the interpolation points are entered in the screen as a percentage of the rated current. On the left are the inductance values, and on the right the values for the overload (> 100% of rated current).

# Inductance [%]

|Index [0]|100 %|
|---|---|
|Index [1]|90 %|
|Index [2]|68 %|
|Index [3]|31 %|

# Rated current

|Irated [4]|Irated [6]|[%]|
|---|---|---|
|Irated [5]|Irated [7]| |

Image 7.16: “PS motor electrical parameters” screen

Image 7.17: Diagram: “Scaling of q-inductance L in [%]”

- ① P 472[0] - [3] Lsig_q@Ix Scaling of q-stator inductance in [%]; interpolation points 0 to 3.
- ② P 472[4] - [7] MOT_CurrentIx Scaling of rated current in [%]; interpolation points 4 to 7.

# Legend for Diagram: “Scaling of q-inductance L in [%]”

NOTE

l Between the interpolation points the scaling factor is interpolated in linear mode. The current scaling of the inductance is displayed in the scope variable 74_Is_ActVal.

MOOG ID No.",How can the small compensation table be accessed in the MSD ServoDrive system?,The small compensation table with 250 elements is accessed via parameter P 380[0..251] - CON_TCoggAddTab[0..251] for reading and writing.,"Access is through P 380[0..251] - CON_TCoggAddTab[0..251], allowing read and write operations on the 250-element table.",Reading and writing to the 250-element table is performed using P 380[0..251] - CON_TCoggAddTab[0..251].,The small compensation table's elements are accessible via P 380[0..251] - CON_TCoggAddTab[0..251] for both read and write functions.,"For the small compensation table, parameter P 380[0..251] - CON_TCoggAddTab[0..251] enables read and write access to its 250 elements."
5,msd_servo_drive.txt,49,0a102266d5d39d8d4bde1e5f1302e14e501e483dbf6f4b6a58ea92bfb2be3c7f,"The fader is activated when the starting and ending speeds are >0 and are plausible relative to each other.

There are two functions each for teaching, calculating and compensation (F1 and F2). This fulfils a series of different requirements:

Two tables each for teaching and compensation:

- One small table with 250 elements each and
- One large table with 4000 elements each.

Input mapping diagram: two different methods for the input reference:

- Input reference ‘fixed' 32-bit: incremental, ‘rotary' recurring position: The entire width of the 32-bit input position has ‘fixed mapping' over the entire ‘width' of the input position.

However, entries are made in the teach table only in the positive direction of travel in this case; in the negative direction of travel, all entries into the teach table are then suppressed.

# Index display: for teaching routine and compensation:

7.3.5.2 Settings for teaching, calculating and compensation

- P 440[0] - CON_TAB_TabIndex: Index of the table

The current table index calculated using the input position is output here both during the teaching routine and the compensation. (The parameter is accessible via the scope.)

(385) __

CON_TCoggTeachCon

# Table value display: for teaching routine and compensation:

- P 446[0] - CON_TAB_OutVal: output value (of the table)

The currently determined table value of the teach table is output here during the teaching routine. The current isq feed forward control value interpolated using the compensation table is output here during the compensation. (The parameter is accessible via the scope.)

|(3)CALC1|= Calc rotary SmallTab, Calc absolute BigTab|
|---|---|
|F1:|rotary, small TeachTab to small CompTab|
|(8)CALC2|F2: absolute, big TeachTab to big CompTab|
|= Calc rotativ BigTab|F1: rotary, big TeachTab to big CompTab|
|(4)RESET|= Reset teach table entries|
| |Reset both teach tables to No-Init-Value (1000.0)|
|(0)READY|= Teaching switched off|

# Access to the compensation tables

- Access to the small compensation table with 250 elements:

Reading and writing using parameter P 380[0..251] - CON_TCoggAddTab[0..251]. As with other parameters as well, saving takes place in the context of the parameter record being saved in the device’s special memory for parameters.

- Access to the large compensation table with 4000 elements:

Offline, i.e. when neither a teaching routine nor compensation are taking place ‘online,' the individual elements of the large compensation table can be accessed using:

|Index:|Reading and writing using parameter P 440[0] - CON_TAB_TabIndex.|
|---|---|
|Value:|Reading and writing using parameter P 441[0] - CON_TAB_TabVal.|
| |Saving takes place in conjunction with the saving of the parameter record in the device’s mass memory (limitation of the max. number of storage cycles).|

# Additional Parameters

|(1)TeachEpsRS-1|= Teach epsrs commutation angle (electrical)|
|---|---|
|- F1:|Small teach table (250)|
|- F1:|Rotary, mapping: fixed 32-bit|
|- F1:|Without teaching direction|
|- F1:|Without offset and delta, with tuning, with fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(1)EPSRS|
| |àsmall CompTab (380)CON_TCoggAddTab|
|(2)TeachEpsRS-2|= Teach epsrs commutation angle (electrical)|
| |as for (1)TeachEpsRS-1|
|(5)TeachUserRefPos|=Teach (277)MPRO_FG_UserRef|
|Pos:|reference position in user units|
|- F2:|Big teach table (4000)|
|- F2:|Absolute, mapping via (443)CON_TAB_PosDelta|
|- F2:|With teaching direction|
|- F2:|Without offset and delta, with tuning, without fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(2)APSPOS|
| |àbig CompTab, access via (440) and (441)|
|(6)TeachEpsM|=Teach epsm mechanical angle (shaft)|

# Table 7.3: Settings for teaching, calculating and compensation

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 118

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

(385) __

# CON_TCoggTeachCon

Singleturn position from encoder for commutation

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachPosEncPcon

Teach posact from pcon encoder

Actual position from encoder for position control in reference value normalization, Scope-Signal 152

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPconEncPos

Teach (412)CON_PCON_ActPosition

Actual position from encoder for position control in reference value normalization

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPosEncRed

Teach posact from redundant encoder

Actual position from so called redundant encoder in ref value normalization, Scope-Signal 153

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachSTPosPcon

Teach singleturn position from position control

Singleturn position of position control

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachEpsRS-3

Teach epsrs commutation angle (electrical)

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441

# Table 7.3:

Settings for teaching, calculating and compensation (continue)

The compensation (feed forward control) is activated using parameter: P 382 [0] - CON_TCoggComp > 0.

# 7.3.5.3 Procedure for detent torque compensation

The following table shows the procedure for detent torque compensation.

MOOG
ID No.:CB40859-001
Date:11/2020

# 7 Control

|No.|Action|
|---|---|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|4|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement Set the input tuning if necessary using:|
|5|P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|6|Start control|
|7|Run motor at low speed (≤ 1 rpm) Set the position source for the teaching, activate teaching: Select|
|8|P 385[0] - CON_TCoggTeachCon > 0. àThe teaching routine begins (possibly only with PosStart, however).|
|9|Move at least 1 motor revolution in the same direction (internal filter time). With the control still operating, the teaching is then stopped by calling the|
|10|calculation function once: P 385[0] - CON_TCoggTeachCon = (3)CALC1 or (8)CALC2. Afterwards, parameter P 385[0] jumps back to READY(0).|

Table 7.4: Overall procedure for detent torque compensation

MSD ServoDrive - DeviceHelp 120

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# MSD ServoDrive - DeviceHelp

No. Action

- The teaching and calculation are thus finished.
- The position source used has been stored internally.
- The compensation table is available for use immediately.

# 11 Stop control

Start the compensation: P 382[0] - CON_TCoggComp &gt; 0

# 12

After this, the q-current feed forward control becomes active when the control is restarted.

Save device data.

# 13

The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.

Image 7.12: After enabling detent torque compensation (with) (please keep the Y axis scaling in mind!)
# 7.3.5.3.1 Scope recording: speed ‘before' and ‘after'

Possible monitoring via scope signal (69) isqref_comp [A]: ref. current from anti-cogging --> in ‘blue' here

A significant improvement in the speed progression is noticeable in the ‘yellow’ scope signal (13): nact [rpm]: cur. speed from filter.

Image 7.11: Before detent torque compensation (without)

# 7.3.5.4 Compensation as a function of the electrical angle

# 7.3.5.5 Compensation as a function of the absolute position

|EPSRS|ABSPOS|
|---|---|
|Teaching routine and compensation à small CompTab (250er)|Teaching routine and compensation à big CompTab (4000)|
|- Incremental, ‘rotary' recurring position|- Absolute, 'linear' continuous position|
|- Without offset and delta, with tuning, with fader|- With offset and delta, with tuning, without fader|
|- (1) Teach epsrs, commutation angle (electrical)|- (3) Teach (277)MPRO_FG_UserRefPos, reference position in user units|
|No. Action|- (7) Teach posact from pcon encoder, actual position from encoder for position control loop in reference scaling, scope signal 152|
| |- (9) Teach (412)CON_PCON_ActPosition, actual position of the position control in reference scaling|
| |- (10) Teach posact from pcon encoder, actual position from so-called redundant encoder in reference scaling, scope signal 153|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
|5|Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon = (1)TeachEpsRS-1.àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|---|Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the compensation table P 380 - CON_TCoggAddTab (small table with 250 elements).|
|8|Stop control|
| |Start the compensation: P 382[0] - CON_TCoggComp = (1)EPSRS|
|9|After this, the q-current feed forward control becomes active when the control is restarted. Save device data.|
|10|- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 122

# 7 Control

# MOOG

ID No.: CB40859-001 Date: 11/2020

# MSD ServoDrive - DeviceHelp

|No.|Action|
|---|---|
|1|Open manual mode window.|
|2|Approach start position|
|3|Speed control mode control setting (set high rigidity, for smooth running)|
|4|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|5|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement = e.g. (endpos inc - startpos inc) / 4000 elements|
|6|Set the input tuning if necessary using: P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|7|Start control|
|8|Run motor at low speed (≤ 1 rpm). Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon= (5)TeachUserRefPos or select|
|9|P 385[0] - CON_TCoggTeachCon= (7)TeachPosEncPcon or select P 385[0] - CON_TCoggTeachCon= (9)TeachPconActPos or select P 385[0] - CON_TCoggTeachCon= (10)TeachPosEncRed. à The teaching routine begins (but only with PosStart).|
|10|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|11|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the internal compensation table (big table with 4000 elements).|
|12|Stop control|
|13|Save device data. - The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner. Use the scope to monitor IsqRef_Comp|
|14|Compensation as a function of mechanical rotation (EPMS) - Incremental, ‘rotary' recurring position - Without offset and delta, with tuning, with fader - (6) Teach epsm mechanical angle (shaft), SingleTurn position from encoder for commutation - (11) Teach singleturn position from position control, SingleTurn position of the position control, + Homing + axis correction - (12) Teach epsrs, commutation angle (electrical)|

# No.  Action

|1|Open manual mode window|
|---|---|
|2|Set the speed control mode (set high stiffness, for radial true running) Set speed control mode.|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
| |Set the position source for the teaching, activate teaching: Select|
|5|P 385[0] - CON_TCoggTeachCon = (6)TeachEpsMor select|
| |P 385[0] - CON_TCoggTeachCon = (11)TeachSTPosPcon. àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
| |Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (8)CALC2. This imports all values into the internal compensation table (big table with 4000 elements).|
|8|Stop control|
|9|Start the compensation: P 382[0] - CON_TCoggComp = (3)EPSM|
|10|Save device data.|
| |- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|
|11|Use the scope to monitor IsqRef_Comp|

# 7.3.5.7 Compensation as a function of the electrical angle (EPSRS), big table

Teaching routine and compensation à big CompTab (4000)

- Incremental, ‘rotary' recurring position
- Without offset and delta, with tuning, with fader

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 124

# 7 Control

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# 7.3.5.8 FadeOut function

Adaptation of torque control / Saturation characteristic (see Section ""Adaptation of torque control"" on page 125).

At higher speeds it usually makes sense to linearly fade the Q-current feed forward control of the detent torque compensation using the FadeOut function:

- P 447[3] - CON_TAB_Tune[3].FadeOutStart: fader starting speed
- P 447[4] - CON_TAB_Tune[4].FadeOutEnd: fader ending speed.

FadeStartSpeed

|100 %|Rastmoment-|kompensation|cogging|compensation|
|---|---|---|---|---|
|0 %| | | | |

Image 7.15: Structure of expanded torque control

FadeEndSpeed

# 7.3.6 Advanced torque control

Torque control is expanded by three functions in order to optimize the control dynamics of the current and speed controllers.

# 7.3.6.1 Adaptation of torque control

# 7.3.6.1.1 Saturation characteristic

In the overload range, saturation effects reduce the inductance of many motors. As a result, the current controller optimized to the rated current may oscillate or become unstable. In this case the gain of the current controller should be adapted to the load case by way of four interpolation points. The values for the interpolation points are entered in the screen as a percentage of the rated current. On the left are the inductance values, and on the right the values for the overload (> 100% of rated current).

# Inductance [%]

|Index [0]|100 %|
|---|---|
|Index [1]|90 %|
|Index [2]|68 %|
|Index [3]|31 %|

# Rated current

|Irated [4]|Irated [6]|[%]|
|---|---|---|
|Irated [5]|Irated [7]| |

Image 7.16: “PS motor electrical parameters” screen

Image 7.17: Diagram: “Scaling of q-inductance L in [%]”

- ① P 472[0] - [3] Lsig_q@Ix Scaling of q-stator inductance in [%]; interpolation points 0 to 3.
- ② P 472[4] - [7] MOT_CurrentIx Scaling of rated current in [%]; interpolation points 4 to 7.

# Legend for Diagram: “Scaling of q-inductance L in [%]”

NOTE

l Between the interpolation points the scaling factor is interpolated in linear mode. The current scaling of the inductance is displayed in the scope variable 74_Is_ActVal.

MOOG ID No.",What is the procedure to start the detent torque compensation in the MSD ServoDrive system?,"The procedure involves opening the manual mode window, setting speed control mode, starting control, running the motor at low speed, activating teaching, and then stopping the teaching to start compensation.","Start by opening manual mode, configure speed control, initiate control, run motor slowly, enable teaching, and conclude teaching to activate compensation.","Begin with manual mode, adjust speed settings, start control, operate motor at low speed, engage teaching, then halt teaching to commence compensation.","Initiate manual mode, set up speed control, launch control, move motor slowly, start teaching, and after teaching, begin compensation.","The process includes entering manual mode, configuring speed control, activating control, running motor at ≤1 rpm, starting teaching, and then transitioning to compensation."
6,msd_servo_drive.txt,49,0a102266d5d39d8d4bde1e5f1302e14e501e483dbf6f4b6a58ea92bfb2be3c7f,"The fader is activated when the starting and ending speeds are >0 and are plausible relative to each other.

There are two functions each for teaching, calculating and compensation (F1 and F2). This fulfils a series of different requirements:

Two tables each for teaching and compensation:

- One small table with 250 elements each and
- One large table with 4000 elements each.

Input mapping diagram: two different methods for the input reference:

- Input reference ‘fixed' 32-bit: incremental, ‘rotary' recurring position: The entire width of the 32-bit input position has ‘fixed mapping' over the entire ‘width' of the input position.

However, entries are made in the teach table only in the positive direction of travel in this case; in the negative direction of travel, all entries into the teach table are then suppressed.

# Index display: for teaching routine and compensation:

7.3.5.2 Settings for teaching, calculating and compensation

- P 440[0] - CON_TAB_TabIndex: Index of the table

The current table index calculated using the input position is output here both during the teaching routine and the compensation. (The parameter is accessible via the scope.)

(385) __

CON_TCoggTeachCon

# Table value display: for teaching routine and compensation:

- P 446[0] - CON_TAB_OutVal: output value (of the table)

The currently determined table value of the teach table is output here during the teaching routine. The current isq feed forward control value interpolated using the compensation table is output here during the compensation. (The parameter is accessible via the scope.)

|(3)CALC1|= Calc rotary SmallTab, Calc absolute BigTab|
|---|---|
|F1:|rotary, small TeachTab to small CompTab|
|(8)CALC2|F2: absolute, big TeachTab to big CompTab|
|= Calc rotativ BigTab|F1: rotary, big TeachTab to big CompTab|
|(4)RESET|= Reset teach table entries|
| |Reset both teach tables to No-Init-Value (1000.0)|
|(0)READY|= Teaching switched off|

# Access to the compensation tables

- Access to the small compensation table with 250 elements:

Reading and writing using parameter P 380[0..251] - CON_TCoggAddTab[0..251]. As with other parameters as well, saving takes place in the context of the parameter record being saved in the device’s special memory for parameters.

- Access to the large compensation table with 4000 elements:

Offline, i.e. when neither a teaching routine nor compensation are taking place ‘online,' the individual elements of the large compensation table can be accessed using:

|Index:|Reading and writing using parameter P 440[0] - CON_TAB_TabIndex.|
|---|---|
|Value:|Reading and writing using parameter P 441[0] - CON_TAB_TabVal.|
| |Saving takes place in conjunction with the saving of the parameter record in the device’s mass memory (limitation of the max. number of storage cycles).|

# Additional Parameters

|(1)TeachEpsRS-1|= Teach epsrs commutation angle (electrical)|
|---|---|
|- F1:|Small teach table (250)|
|- F1:|Rotary, mapping: fixed 32-bit|
|- F1:|Without teaching direction|
|- F1:|Without offset and delta, with tuning, with fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(1)EPSRS|
| |àsmall CompTab (380)CON_TCoggAddTab|
|(2)TeachEpsRS-2|= Teach epsrs commutation angle (electrical)|
| |as for (1)TeachEpsRS-1|
|(5)TeachUserRefPos|=Teach (277)MPRO_FG_UserRef|
|Pos:|reference position in user units|
|- F2:|Big teach table (4000)|
|- F2:|Absolute, mapping via (443)CON_TAB_PosDelta|
|- F2:|With teaching direction|
|- F2:|Without offset and delta, with tuning, without fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(2)APSPOS|
| |àbig CompTab, access via (440) and (441)|
|(6)TeachEpsM|=Teach epsm mechanical angle (shaft)|

# Table 7.3: Settings for teaching, calculating and compensation

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 118

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

(385) __

# CON_TCoggTeachCon

Singleturn position from encoder for commutation

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachPosEncPcon

Teach posact from pcon encoder

Actual position from encoder for position control in reference value normalization, Scope-Signal 152

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPconEncPos

Teach (412)CON_PCON_ActPosition

Actual position from encoder for position control in reference value normalization

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPosEncRed

Teach posact from redundant encoder

Actual position from so called redundant encoder in ref value normalization, Scope-Signal 153

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachSTPosPcon

Teach singleturn position from position control

Singleturn position of position control

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachEpsRS-3

Teach epsrs commutation angle (electrical)

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441

# Table 7.3:

Settings for teaching, calculating and compensation (continue)

The compensation (feed forward control) is activated using parameter: P 382 [0] - CON_TCoggComp > 0.

# 7.3.5.3 Procedure for detent torque compensation

The following table shows the procedure for detent torque compensation.

MOOG
ID No.:CB40859-001
Date:11/2020

# 7 Control

|No.|Action|
|---|---|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|4|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement Set the input tuning if necessary using:|
|5|P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|6|Start control|
|7|Run motor at low speed (≤ 1 rpm) Set the position source for the teaching, activate teaching: Select|
|8|P 385[0] - CON_TCoggTeachCon > 0. àThe teaching routine begins (possibly only with PosStart, however).|
|9|Move at least 1 motor revolution in the same direction (internal filter time). With the control still operating, the teaching is then stopped by calling the|
|10|calculation function once: P 385[0] - CON_TCoggTeachCon = (3)CALC1 or (8)CALC2. Afterwards, parameter P 385[0] jumps back to READY(0).|

Table 7.4: Overall procedure for detent torque compensation

MSD ServoDrive - DeviceHelp 120

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# MSD ServoDrive - DeviceHelp

No. Action

- The teaching and calculation are thus finished.
- The position source used has been stored internally.
- The compensation table is available for use immediately.

# 11 Stop control

Start the compensation: P 382[0] - CON_TCoggComp &gt; 0

# 12

After this, the q-current feed forward control becomes active when the control is restarted.

Save device data.

# 13

The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.

Image 7.12: After enabling detent torque compensation (with) (please keep the Y axis scaling in mind!)
# 7.3.5.3.1 Scope recording: speed ‘before' and ‘after'

Possible monitoring via scope signal (69) isqref_comp [A]: ref. current from anti-cogging --> in ‘blue' here

A significant improvement in the speed progression is noticeable in the ‘yellow’ scope signal (13): nact [rpm]: cur. speed from filter.

Image 7.11: Before detent torque compensation (without)

# 7.3.5.4 Compensation as a function of the electrical angle

# 7.3.5.5 Compensation as a function of the absolute position

|EPSRS|ABSPOS|
|---|---|
|Teaching routine and compensation à small CompTab (250er)|Teaching routine and compensation à big CompTab (4000)|
|- Incremental, ‘rotary' recurring position|- Absolute, 'linear' continuous position|
|- Without offset and delta, with tuning, with fader|- With offset and delta, with tuning, without fader|
|- (1) Teach epsrs, commutation angle (electrical)|- (3) Teach (277)MPRO_FG_UserRefPos, reference position in user units|
|No. Action|- (7) Teach posact from pcon encoder, actual position from encoder for position control loop in reference scaling, scope signal 152|
| |- (9) Teach (412)CON_PCON_ActPosition, actual position of the position control in reference scaling|
| |- (10) Teach posact from pcon encoder, actual position from so-called redundant encoder in reference scaling, scope signal 153|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
|5|Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon = (1)TeachEpsRS-1.àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|---|Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the compensation table P 380 - CON_TCoggAddTab (small table with 250 elements).|
|8|Stop control|
| |Start the compensation: P 382[0] - CON_TCoggComp = (1)EPSRS|
|9|After this, the q-current feed forward control becomes active when the control is restarted. Save device data.|
|10|- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 122

# 7 Control

# MOOG

ID No.: CB40859-001 Date: 11/2020

# MSD ServoDrive - DeviceHelp

|No.|Action|
|---|---|
|1|Open manual mode window.|
|2|Approach start position|
|3|Speed control mode control setting (set high rigidity, for smooth running)|
|4|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|5|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement = e.g. (endpos inc - startpos inc) / 4000 elements|
|6|Set the input tuning if necessary using: P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|7|Start control|
|8|Run motor at low speed (≤ 1 rpm). Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon= (5)TeachUserRefPos or select|
|9|P 385[0] - CON_TCoggTeachCon= (7)TeachPosEncPcon or select P 385[0] - CON_TCoggTeachCon= (9)TeachPconActPos or select P 385[0] - CON_TCoggTeachCon= (10)TeachPosEncRed. à The teaching routine begins (but only with PosStart).|
|10|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|11|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the internal compensation table (big table with 4000 elements).|
|12|Stop control|
|13|Save device data. - The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner. Use the scope to monitor IsqRef_Comp|
|14|Compensation as a function of mechanical rotation (EPMS) - Incremental, ‘rotary' recurring position - Without offset and delta, with tuning, with fader - (6) Teach epsm mechanical angle (shaft), SingleTurn position from encoder for commutation - (11) Teach singleturn position from position control, SingleTurn position of the position control, + Homing + axis correction - (12) Teach epsrs, commutation angle (electrical)|

# No.  Action

|1|Open manual mode window|
|---|---|
|2|Set the speed control mode (set high stiffness, for radial true running) Set speed control mode.|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
| |Set the position source for the teaching, activate teaching: Select|
|5|P 385[0] - CON_TCoggTeachCon = (6)TeachEpsMor select|
| |P 385[0] - CON_TCoggTeachCon = (11)TeachSTPosPcon. àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
| |Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (8)CALC2. This imports all values into the internal compensation table (big table with 4000 elements).|
|8|Stop control|
|9|Start the compensation: P 382[0] - CON_TCoggComp = (3)EPSM|
|10|Save device data.|
| |- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|
|11|Use the scope to monitor IsqRef_Comp|

# 7.3.5.7 Compensation as a function of the electrical angle (EPSRS), big table

Teaching routine and compensation à big CompTab (4000)

- Incremental, ‘rotary' recurring position
- Without offset and delta, with tuning, with fader

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 124

# 7 Control

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# 7.3.5.8 FadeOut function

Adaptation of torque control / Saturation characteristic (see Section ""Adaptation of torque control"" on page 125).

At higher speeds it usually makes sense to linearly fade the Q-current feed forward control of the detent torque compensation using the FadeOut function:

- P 447[3] - CON_TAB_Tune[3].FadeOutStart: fader starting speed
- P 447[4] - CON_TAB_Tune[4].FadeOutEnd: fader ending speed.

FadeStartSpeed

|100 %|Rastmoment-|kompensation|cogging|compensation|
|---|---|---|---|---|
|0 %| | | | |

Image 7.15: Structure of expanded torque control

FadeEndSpeed

# 7.3.6 Advanced torque control

Torque control is expanded by three functions in order to optimize the control dynamics of the current and speed controllers.

# 7.3.6.1 Adaptation of torque control

# 7.3.6.1.1 Saturation characteristic

In the overload range, saturation effects reduce the inductance of many motors. As a result, the current controller optimized to the rated current may oscillate or become unstable. In this case the gain of the current controller should be adapted to the load case by way of four interpolation points. The values for the interpolation points are entered in the screen as a percentage of the rated current. On the left are the inductance values, and on the right the values for the overload (> 100% of rated current).

# Inductance [%]

|Index [0]|100 %|
|---|---|
|Index [1]|90 %|
|Index [2]|68 %|
|Index [3]|31 %|

# Rated current

|Irated [4]|Irated [6]|[%]|
|---|---|---|
|Irated [5]|Irated [7]| |

Image 7.16: “PS motor electrical parameters” screen

Image 7.17: Diagram: “Scaling of q-inductance L in [%]”

- ① P 472[0] - [3] Lsig_q@Ix Scaling of q-stator inductance in [%]; interpolation points 0 to 3.
- ② P 472[4] - [7] MOT_CurrentIx Scaling of rated current in [%]; interpolation points 4 to 7.

# Legend for Diagram: “Scaling of q-inductance L in [%]”

NOTE

l Between the interpolation points the scaling factor is interpolated in linear mode. The current scaling of the inductance is displayed in the scope variable 74_Is_ActVal.

MOOG ID No.",How is the large compensation table accessed offline in the MSD ServoDrive system?,Offline access to the large compensation table's 4000 elements is via parameters P 440[0] - CON_TAB_TabIndex for index and P 441[0] - CON_TAB_TabVal for value.,"When offline, elements are accessed using P 440[0] for index and P 441[0] for value, enabling read and write operations.",The large table's elements are read and written offline with P 440[0] (index) and P 441[0] (value).,Accessing the 4000-element table offline involves P 440[0] for index and P 441[0] for value operations.,"For offline access, the large compensation table uses P 440[0] to specify the index and P 441[0] to handle the value."
7,msd_servo_drive.txt,49,0a102266d5d39d8d4bde1e5f1302e14e501e483dbf6f4b6a58ea92bfb2be3c7f,"The fader is activated when the starting and ending speeds are >0 and are plausible relative to each other.

There are two functions each for teaching, calculating and compensation (F1 and F2). This fulfils a series of different requirements:

Two tables each for teaching and compensation:

- One small table with 250 elements each and
- One large table with 4000 elements each.

Input mapping diagram: two different methods for the input reference:

- Input reference ‘fixed' 32-bit: incremental, ‘rotary' recurring position: The entire width of the 32-bit input position has ‘fixed mapping' over the entire ‘width' of the input position.

However, entries are made in the teach table only in the positive direction of travel in this case; in the negative direction of travel, all entries into the teach table are then suppressed.

# Index display: for teaching routine and compensation:

7.3.5.2 Settings for teaching, calculating and compensation

- P 440[0] - CON_TAB_TabIndex: Index of the table

The current table index calculated using the input position is output here both during the teaching routine and the compensation. (The parameter is accessible via the scope.)

(385) __

CON_TCoggTeachCon

# Table value display: for teaching routine and compensation:

- P 446[0] - CON_TAB_OutVal: output value (of the table)

The currently determined table value of the teach table is output here during the teaching routine. The current isq feed forward control value interpolated using the compensation table is output here during the compensation. (The parameter is accessible via the scope.)

|(3)CALC1|= Calc rotary SmallTab, Calc absolute BigTab|
|---|---|
|F1:|rotary, small TeachTab to small CompTab|
|(8)CALC2|F2: absolute, big TeachTab to big CompTab|
|= Calc rotativ BigTab|F1: rotary, big TeachTab to big CompTab|
|(4)RESET|= Reset teach table entries|
| |Reset both teach tables to No-Init-Value (1000.0)|
|(0)READY|= Teaching switched off|

# Access to the compensation tables

- Access to the small compensation table with 250 elements:

Reading and writing using parameter P 380[0..251] - CON_TCoggAddTab[0..251]. As with other parameters as well, saving takes place in the context of the parameter record being saved in the device’s special memory for parameters.

- Access to the large compensation table with 4000 elements:

Offline, i.e. when neither a teaching routine nor compensation are taking place ‘online,' the individual elements of the large compensation table can be accessed using:

|Index:|Reading and writing using parameter P 440[0] - CON_TAB_TabIndex.|
|---|---|
|Value:|Reading and writing using parameter P 441[0] - CON_TAB_TabVal.|
| |Saving takes place in conjunction with the saving of the parameter record in the device’s mass memory (limitation of the max. number of storage cycles).|

# Additional Parameters

|(1)TeachEpsRS-1|= Teach epsrs commutation angle (electrical)|
|---|---|
|- F1:|Small teach table (250)|
|- F1:|Rotary, mapping: fixed 32-bit|
|- F1:|Without teaching direction|
|- F1:|Without offset and delta, with tuning, with fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(1)EPSRS|
| |àsmall CompTab (380)CON_TCoggAddTab|
|(2)TeachEpsRS-2|= Teach epsrs commutation angle (electrical)|
| |as for (1)TeachEpsRS-1|
|(5)TeachUserRefPos|=Teach (277)MPRO_FG_UserRef|
|Pos:|reference position in user units|
|- F2:|Big teach table (4000)|
|- F2:|Absolute, mapping via (443)CON_TAB_PosDelta|
|- F2:|With teaching direction|
|- F2:|Without offset and delta, with tuning, without fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(2)APSPOS|
| |àbig CompTab, access via (440) and (441)|
|(6)TeachEpsM|=Teach epsm mechanical angle (shaft)|

# Table 7.3: Settings for teaching, calculating and compensation

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 118

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

(385) __

# CON_TCoggTeachCon

Singleturn position from encoder for commutation

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachPosEncPcon

Teach posact from pcon encoder

Actual position from encoder for position control in reference value normalization, Scope-Signal 152

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPconEncPos

Teach (412)CON_PCON_ActPosition

Actual position from encoder for position control in reference value normalization

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPosEncRed

Teach posact from redundant encoder

Actual position from so called redundant encoder in ref value normalization, Scope-Signal 153

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachSTPosPcon

Teach singleturn position from position control

Singleturn position of position control

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachEpsRS-3

Teach epsrs commutation angle (electrical)

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441

# Table 7.3:

Settings for teaching, calculating and compensation (continue)

The compensation (feed forward control) is activated using parameter: P 382 [0] - CON_TCoggComp > 0.

# 7.3.5.3 Procedure for detent torque compensation

The following table shows the procedure for detent torque compensation.

MOOG
ID No.:CB40859-001
Date:11/2020

# 7 Control

|No.|Action|
|---|---|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|4|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement Set the input tuning if necessary using:|
|5|P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|6|Start control|
|7|Run motor at low speed (≤ 1 rpm) Set the position source for the teaching, activate teaching: Select|
|8|P 385[0] - CON_TCoggTeachCon > 0. àThe teaching routine begins (possibly only with PosStart, however).|
|9|Move at least 1 motor revolution in the same direction (internal filter time). With the control still operating, the teaching is then stopped by calling the|
|10|calculation function once: P 385[0] - CON_TCoggTeachCon = (3)CALC1 or (8)CALC2. Afterwards, parameter P 385[0] jumps back to READY(0).|

Table 7.4: Overall procedure for detent torque compensation

MSD ServoDrive - DeviceHelp 120

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# MSD ServoDrive - DeviceHelp

No. Action

- The teaching and calculation are thus finished.
- The position source used has been stored internally.
- The compensation table is available for use immediately.

# 11 Stop control

Start the compensation: P 382[0] - CON_TCoggComp &gt; 0

# 12

After this, the q-current feed forward control becomes active when the control is restarted.

Save device data.

# 13

The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.

Image 7.12: After enabling detent torque compensation (with) (please keep the Y axis scaling in mind!)
# 7.3.5.3.1 Scope recording: speed ‘before' and ‘after'

Possible monitoring via scope signal (69) isqref_comp [A]: ref. current from anti-cogging --> in ‘blue' here

A significant improvement in the speed progression is noticeable in the ‘yellow’ scope signal (13): nact [rpm]: cur. speed from filter.

Image 7.11: Before detent torque compensation (without)

# 7.3.5.4 Compensation as a function of the electrical angle

# 7.3.5.5 Compensation as a function of the absolute position

|EPSRS|ABSPOS|
|---|---|
|Teaching routine and compensation à small CompTab (250er)|Teaching routine and compensation à big CompTab (4000)|
|- Incremental, ‘rotary' recurring position|- Absolute, 'linear' continuous position|
|- Without offset and delta, with tuning, with fader|- With offset and delta, with tuning, without fader|
|- (1) Teach epsrs, commutation angle (electrical)|- (3) Teach (277)MPRO_FG_UserRefPos, reference position in user units|
|No. Action|- (7) Teach posact from pcon encoder, actual position from encoder for position control loop in reference scaling, scope signal 152|
| |- (9) Teach (412)CON_PCON_ActPosition, actual position of the position control in reference scaling|
| |- (10) Teach posact from pcon encoder, actual position from so-called redundant encoder in reference scaling, scope signal 153|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
|5|Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon = (1)TeachEpsRS-1.àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|---|Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the compensation table P 380 - CON_TCoggAddTab (small table with 250 elements).|
|8|Stop control|
| |Start the compensation: P 382[0] - CON_TCoggComp = (1)EPSRS|
|9|After this, the q-current feed forward control becomes active when the control is restarted. Save device data.|
|10|- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 122

# 7 Control

# MOOG

ID No.: CB40859-001 Date: 11/2020

# MSD ServoDrive - DeviceHelp

|No.|Action|
|---|---|
|1|Open manual mode window.|
|2|Approach start position|
|3|Speed control mode control setting (set high rigidity, for smooth running)|
|4|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|5|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement = e.g. (endpos inc - startpos inc) / 4000 elements|
|6|Set the input tuning if necessary using: P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|7|Start control|
|8|Run motor at low speed (≤ 1 rpm). Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon= (5)TeachUserRefPos or select|
|9|P 385[0] - CON_TCoggTeachCon= (7)TeachPosEncPcon or select P 385[0] - CON_TCoggTeachCon= (9)TeachPconActPos or select P 385[0] - CON_TCoggTeachCon= (10)TeachPosEncRed. à The teaching routine begins (but only with PosStart).|
|10|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|11|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the internal compensation table (big table with 4000 elements).|
|12|Stop control|
|13|Save device data. - The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner. Use the scope to monitor IsqRef_Comp|
|14|Compensation as a function of mechanical rotation (EPMS) - Incremental, ‘rotary' recurring position - Without offset and delta, with tuning, with fader - (6) Teach epsm mechanical angle (shaft), SingleTurn position from encoder for commutation - (11) Teach singleturn position from position control, SingleTurn position of the position control, + Homing + axis correction - (12) Teach epsrs, commutation angle (electrical)|

# No.  Action

|1|Open manual mode window|
|---|---|
|2|Set the speed control mode (set high stiffness, for radial true running) Set speed control mode.|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
| |Set the position source for the teaching, activate teaching: Select|
|5|P 385[0] - CON_TCoggTeachCon = (6)TeachEpsMor select|
| |P 385[0] - CON_TCoggTeachCon = (11)TeachSTPosPcon. àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
| |Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (8)CALC2. This imports all values into the internal compensation table (big table with 4000 elements).|
|8|Stop control|
|9|Start the compensation: P 382[0] - CON_TCoggComp = (3)EPSM|
|10|Save device data.|
| |- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|
|11|Use the scope to monitor IsqRef_Comp|

# 7.3.5.7 Compensation as a function of the electrical angle (EPSRS), big table

Teaching routine and compensation à big CompTab (4000)

- Incremental, ‘rotary' recurring position
- Without offset and delta, with tuning, with fader

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 124

# 7 Control

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# 7.3.5.8 FadeOut function

Adaptation of torque control / Saturation characteristic (see Section ""Adaptation of torque control"" on page 125).

At higher speeds it usually makes sense to linearly fade the Q-current feed forward control of the detent torque compensation using the FadeOut function:

- P 447[3] - CON_TAB_Tune[3].FadeOutStart: fader starting speed
- P 447[4] - CON_TAB_Tune[4].FadeOutEnd: fader ending speed.

FadeStartSpeed

|100 %|Rastmoment-|kompensation|cogging|compensation|
|---|---|---|---|---|
|0 %| | | | |

Image 7.15: Structure of expanded torque control

FadeEndSpeed

# 7.3.6 Advanced torque control

Torque control is expanded by three functions in order to optimize the control dynamics of the current and speed controllers.

# 7.3.6.1 Adaptation of torque control

# 7.3.6.1.1 Saturation characteristic

In the overload range, saturation effects reduce the inductance of many motors. As a result, the current controller optimized to the rated current may oscillate or become unstable. In this case the gain of the current controller should be adapted to the load case by way of four interpolation points. The values for the interpolation points are entered in the screen as a percentage of the rated current. On the left are the inductance values, and on the right the values for the overload (> 100% of rated current).

# Inductance [%]

|Index [0]|100 %|
|---|---|
|Index [1]|90 %|
|Index [2]|68 %|
|Index [3]|31 %|

# Rated current

|Irated [4]|Irated [6]|[%]|
|---|---|---|
|Irated [5]|Irated [7]| |

Image 7.16: “PS motor electrical parameters” screen

Image 7.17: Diagram: “Scaling of q-inductance L in [%]”

- ① P 472[0] - [3] Lsig_q@Ix Scaling of q-stator inductance in [%]; interpolation points 0 to 3.
- ② P 472[4] - [7] MOT_CurrentIx Scaling of rated current in [%]; interpolation points 4 to 7.

# Legend for Diagram: “Scaling of q-inductance L in [%]”

NOTE

l Between the interpolation points the scaling factor is interpolated in linear mode. The current scaling of the inductance is displayed in the scope variable 74_Is_ActVal.

MOOG ID No.",What are the functions of the FadeOut parameters in the MSD ServoDrive system?,"P 447[3] - CON_TAB_Tune[3].FadeOutStart sets the fader starting speed, and P 447[4] - CON_TAB_Tune[4].FadeOutEnd sets the ending speed for linear fade of Q-current feed forward control.","FadeOutStart defines the beginning speed for fading, and FadeOutEnd specifies the concluding speed for the Q-current feed forward control's linear fade.",These parameters control the linear fade's start (FadeOutStart) and end (FadeOutEnd) speeds for the Q-current feed forward in detent torque compensation.,The FadeOut function uses P 447[3] for start speed and P 447[4] for end speed to linearly fade the Q-current feed forward control.,"In MSD ServoDrive, FadeOutStart and FadeOutEnd parameters manage the linear fading of Q-current feed forward control across specified speeds."
8,msd_servo_drive.txt,49,0a102266d5d39d8d4bde1e5f1302e14e501e483dbf6f4b6a58ea92bfb2be3c7f,"The fader is activated when the starting and ending speeds are >0 and are plausible relative to each other.

There are two functions each for teaching, calculating and compensation (F1 and F2). This fulfils a series of different requirements:

Two tables each for teaching and compensation:

- One small table with 250 elements each and
- One large table with 4000 elements each.

Input mapping diagram: two different methods for the input reference:

- Input reference ‘fixed' 32-bit: incremental, ‘rotary' recurring position: The entire width of the 32-bit input position has ‘fixed mapping' over the entire ‘width' of the input position.

However, entries are made in the teach table only in the positive direction of travel in this case; in the negative direction of travel, all entries into the teach table are then suppressed.

# Index display: for teaching routine and compensation:

7.3.5.2 Settings for teaching, calculating and compensation

- P 440[0] - CON_TAB_TabIndex: Index of the table

The current table index calculated using the input position is output here both during the teaching routine and the compensation. (The parameter is accessible via the scope.)

(385) __

CON_TCoggTeachCon

# Table value display: for teaching routine and compensation:

- P 446[0] - CON_TAB_OutVal: output value (of the table)

The currently determined table value of the teach table is output here during the teaching routine. The current isq feed forward control value interpolated using the compensation table is output here during the compensation. (The parameter is accessible via the scope.)

|(3)CALC1|= Calc rotary SmallTab, Calc absolute BigTab|
|---|---|
|F1:|rotary, small TeachTab to small CompTab|
|(8)CALC2|F2: absolute, big TeachTab to big CompTab|
|= Calc rotativ BigTab|F1: rotary, big TeachTab to big CompTab|
|(4)RESET|= Reset teach table entries|
| |Reset both teach tables to No-Init-Value (1000.0)|
|(0)READY|= Teaching switched off|

# Access to the compensation tables

- Access to the small compensation table with 250 elements:

Reading and writing using parameter P 380[0..251] - CON_TCoggAddTab[0..251]. As with other parameters as well, saving takes place in the context of the parameter record being saved in the device’s special memory for parameters.

- Access to the large compensation table with 4000 elements:

Offline, i.e. when neither a teaching routine nor compensation are taking place ‘online,' the individual elements of the large compensation table can be accessed using:

|Index:|Reading and writing using parameter P 440[0] - CON_TAB_TabIndex.|
|---|---|
|Value:|Reading and writing using parameter P 441[0] - CON_TAB_TabVal.|
| |Saving takes place in conjunction with the saving of the parameter record in the device’s mass memory (limitation of the max. number of storage cycles).|

# Additional Parameters

|(1)TeachEpsRS-1|= Teach epsrs commutation angle (electrical)|
|---|---|
|- F1:|Small teach table (250)|
|- F1:|Rotary, mapping: fixed 32-bit|
|- F1:|Without teaching direction|
|- F1:|Without offset and delta, with tuning, with fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(1)EPSRS|
| |àsmall CompTab (380)CON_TCoggAddTab|
|(2)TeachEpsRS-2|= Teach epsrs commutation angle (electrical)|
| |as for (1)TeachEpsRS-1|
|(5)TeachUserRefPos|=Teach (277)MPRO_FG_UserRef|
|Pos:|reference position in user units|
|- F2:|Big teach table (4000)|
|- F2:|Absolute, mapping via (443)CON_TAB_PosDelta|
|- F2:|With teaching direction|
|- F2:|Without offset and delta, with tuning, without fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(2)APSPOS|
| |àbig CompTab, access via (440) and (441)|
|(6)TeachEpsM|=Teach epsm mechanical angle (shaft)|

# Table 7.3: Settings for teaching, calculating and compensation

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 118

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

(385) __

# CON_TCoggTeachCon

Singleturn position from encoder for commutation

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachPosEncPcon

Teach posact from pcon encoder

Actual position from encoder for position control in reference value normalization, Scope-Signal 152

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPconEncPos

Teach (412)CON_PCON_ActPosition

Actual position from encoder for position control in reference value normalization

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPosEncRed

Teach posact from redundant encoder

Actual position from so called redundant encoder in ref value normalization, Scope-Signal 153

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachSTPosPcon

Teach singleturn position from position control

Singleturn position of position control

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachEpsRS-3

Teach epsrs commutation angle (electrical)

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441

# Table 7.3:

Settings for teaching, calculating and compensation (continue)

The compensation (feed forward control) is activated using parameter: P 382 [0] - CON_TCoggComp > 0.

# 7.3.5.3 Procedure for detent torque compensation

The following table shows the procedure for detent torque compensation.

MOOG
ID No.:CB40859-001
Date:11/2020

# 7 Control

|No.|Action|
|---|---|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|4|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement Set the input tuning if necessary using:|
|5|P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|6|Start control|
|7|Run motor at low speed (≤ 1 rpm) Set the position source for the teaching, activate teaching: Select|
|8|P 385[0] - CON_TCoggTeachCon > 0. àThe teaching routine begins (possibly only with PosStart, however).|
|9|Move at least 1 motor revolution in the same direction (internal filter time). With the control still operating, the teaching is then stopped by calling the|
|10|calculation function once: P 385[0] - CON_TCoggTeachCon = (3)CALC1 or (8)CALC2. Afterwards, parameter P 385[0] jumps back to READY(0).|

Table 7.4: Overall procedure for detent torque compensation

MSD ServoDrive - DeviceHelp 120

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# MSD ServoDrive - DeviceHelp

No. Action

- The teaching and calculation are thus finished.
- The position source used has been stored internally.
- The compensation table is available for use immediately.

# 11 Stop control

Start the compensation: P 382[0] - CON_TCoggComp &gt; 0

# 12

After this, the q-current feed forward control becomes active when the control is restarted.

Save device data.

# 13

The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.

Image 7.12: After enabling detent torque compensation (with) (please keep the Y axis scaling in mind!)
# 7.3.5.3.1 Scope recording: speed ‘before' and ‘after'

Possible monitoring via scope signal (69) isqref_comp [A]: ref. current from anti-cogging --> in ‘blue' here

A significant improvement in the speed progression is noticeable in the ‘yellow’ scope signal (13): nact [rpm]: cur. speed from filter.

Image 7.11: Before detent torque compensation (without)

# 7.3.5.4 Compensation as a function of the electrical angle

# 7.3.5.5 Compensation as a function of the absolute position

|EPSRS|ABSPOS|
|---|---|
|Teaching routine and compensation à small CompTab (250er)|Teaching routine and compensation à big CompTab (4000)|
|- Incremental, ‘rotary' recurring position|- Absolute, 'linear' continuous position|
|- Without offset and delta, with tuning, with fader|- With offset and delta, with tuning, without fader|
|- (1) Teach epsrs, commutation angle (electrical)|- (3) Teach (277)MPRO_FG_UserRefPos, reference position in user units|
|No. Action|- (7) Teach posact from pcon encoder, actual position from encoder for position control loop in reference scaling, scope signal 152|
| |- (9) Teach (412)CON_PCON_ActPosition, actual position of the position control in reference scaling|
| |- (10) Teach posact from pcon encoder, actual position from so-called redundant encoder in reference scaling, scope signal 153|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
|5|Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon = (1)TeachEpsRS-1.àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|---|Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the compensation table P 380 - CON_TCoggAddTab (small table with 250 elements).|
|8|Stop control|
| |Start the compensation: P 382[0] - CON_TCoggComp = (1)EPSRS|
|9|After this, the q-current feed forward control becomes active when the control is restarted. Save device data.|
|10|- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 122

# 7 Control

# MOOG

ID No.: CB40859-001 Date: 11/2020

# MSD ServoDrive - DeviceHelp

|No.|Action|
|---|---|
|1|Open manual mode window.|
|2|Approach start position|
|3|Speed control mode control setting (set high rigidity, for smooth running)|
|4|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|5|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement = e.g. (endpos inc - startpos inc) / 4000 elements|
|6|Set the input tuning if necessary using: P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|7|Start control|
|8|Run motor at low speed (≤ 1 rpm). Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon= (5)TeachUserRefPos or select|
|9|P 385[0] - CON_TCoggTeachCon= (7)TeachPosEncPcon or select P 385[0] - CON_TCoggTeachCon= (9)TeachPconActPos or select P 385[0] - CON_TCoggTeachCon= (10)TeachPosEncRed. à The teaching routine begins (but only with PosStart).|
|10|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|11|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the internal compensation table (big table with 4000 elements).|
|12|Stop control|
|13|Save device data. - The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner. Use the scope to monitor IsqRef_Comp|
|14|Compensation as a function of mechanical rotation (EPMS) - Incremental, ‘rotary' recurring position - Without offset and delta, with tuning, with fader - (6) Teach epsm mechanical angle (shaft), SingleTurn position from encoder for commutation - (11) Teach singleturn position from position control, SingleTurn position of the position control, + Homing + axis correction - (12) Teach epsrs, commutation angle (electrical)|

# No.  Action

|1|Open manual mode window|
|---|---|
|2|Set the speed control mode (set high stiffness, for radial true running) Set speed control mode.|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
| |Set the position source for the teaching, activate teaching: Select|
|5|P 385[0] - CON_TCoggTeachCon = (6)TeachEpsMor select|
| |P 385[0] - CON_TCoggTeachCon = (11)TeachSTPosPcon. àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
| |Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (8)CALC2. This imports all values into the internal compensation table (big table with 4000 elements).|
|8|Stop control|
|9|Start the compensation: P 382[0] - CON_TCoggComp = (3)EPSM|
|10|Save device data.|
| |- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|
|11|Use the scope to monitor IsqRef_Comp|

# 7.3.5.7 Compensation as a function of the electrical angle (EPSRS), big table

Teaching routine and compensation à big CompTab (4000)

- Incremental, ‘rotary' recurring position
- Without offset and delta, with tuning, with fader

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 124

# 7 Control

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# 7.3.5.8 FadeOut function

Adaptation of torque control / Saturation characteristic (see Section ""Adaptation of torque control"" on page 125).

At higher speeds it usually makes sense to linearly fade the Q-current feed forward control of the detent torque compensation using the FadeOut function:

- P 447[3] - CON_TAB_Tune[3].FadeOutStart: fader starting speed
- P 447[4] - CON_TAB_Tune[4].FadeOutEnd: fader ending speed.

FadeStartSpeed

|100 %|Rastmoment-|kompensation|cogging|compensation|
|---|---|---|---|---|
|0 %| | | | |

Image 7.15: Structure of expanded torque control

FadeEndSpeed

# 7.3.6 Advanced torque control

Torque control is expanded by three functions in order to optimize the control dynamics of the current and speed controllers.

# 7.3.6.1 Adaptation of torque control

# 7.3.6.1.1 Saturation characteristic

In the overload range, saturation effects reduce the inductance of many motors. As a result, the current controller optimized to the rated current may oscillate or become unstable. In this case the gain of the current controller should be adapted to the load case by way of four interpolation points. The values for the interpolation points are entered in the screen as a percentage of the rated current. On the left are the inductance values, and on the right the values for the overload (> 100% of rated current).

# Inductance [%]

|Index [0]|100 %|
|---|---|
|Index [1]|90 %|
|Index [2]|68 %|
|Index [3]|31 %|

# Rated current

|Irated [4]|Irated [6]|[%]|
|---|---|---|
|Irated [5]|Irated [7]| |

Image 7.16: “PS motor electrical parameters” screen

Image 7.17: Diagram: “Scaling of q-inductance L in [%]”

- ① P 472[0] - [3] Lsig_q@Ix Scaling of q-stator inductance in [%]; interpolation points 0 to 3.
- ② P 472[4] - [7] MOT_CurrentIx Scaling of rated current in [%]; interpolation points 4 to 7.

# Legend for Diagram: “Scaling of q-inductance L in [%]”

NOTE

l Between the interpolation points the scaling factor is interpolated in linear mode. The current scaling of the inductance is displayed in the scope variable 74_Is_ActVal.

MOOG ID No.",What improvements does detent torque compensation provide in the MSD ServoDrive system?,"It significantly improves speed progression, as noticeable in scope signals, by activating q-current feed forward control for smoother motor operation.",Detent torque compensation enhances motor speed stability and smoothness through q-current feed forward control activation.,The system achieves better speed control and smoother operation by implementing q-current feed forward via detent torque compensation.,"By enabling q-current feed forward, detent torque compensation offers improved speed progression and motor performance.","Significant speed progression improvements are observed with detent torque compensation, thanks to active q-current feed forward control."
9,msd_servo_drive.txt,49,0a102266d5d39d8d4bde1e5f1302e14e501e483dbf6f4b6a58ea92bfb2be3c7f,"The fader is activated when the starting and ending speeds are >0 and are plausible relative to each other.

There are two functions each for teaching, calculating and compensation (F1 and F2). This fulfils a series of different requirements:

Two tables each for teaching and compensation:

- One small table with 250 elements each and
- One large table with 4000 elements each.

Input mapping diagram: two different methods for the input reference:

- Input reference ‘fixed' 32-bit: incremental, ‘rotary' recurring position: The entire width of the 32-bit input position has ‘fixed mapping' over the entire ‘width' of the input position.

However, entries are made in the teach table only in the positive direction of travel in this case; in the negative direction of travel, all entries into the teach table are then suppressed.

# Index display: for teaching routine and compensation:

7.3.5.2 Settings for teaching, calculating and compensation

- P 440[0] - CON_TAB_TabIndex: Index of the table

The current table index calculated using the input position is output here both during the teaching routine and the compensation. (The parameter is accessible via the scope.)

(385) __

CON_TCoggTeachCon

# Table value display: for teaching routine and compensation:

- P 446[0] - CON_TAB_OutVal: output value (of the table)

The currently determined table value of the teach table is output here during the teaching routine. The current isq feed forward control value interpolated using the compensation table is output here during the compensation. (The parameter is accessible via the scope.)

|(3)CALC1|= Calc rotary SmallTab, Calc absolute BigTab|
|---|---|
|F1:|rotary, small TeachTab to small CompTab|
|(8)CALC2|F2: absolute, big TeachTab to big CompTab|
|= Calc rotativ BigTab|F1: rotary, big TeachTab to big CompTab|
|(4)RESET|= Reset teach table entries|
| |Reset both teach tables to No-Init-Value (1000.0)|
|(0)READY|= Teaching switched off|

# Access to the compensation tables

- Access to the small compensation table with 250 elements:

Reading and writing using parameter P 380[0..251] - CON_TCoggAddTab[0..251]. As with other parameters as well, saving takes place in the context of the parameter record being saved in the device’s special memory for parameters.

- Access to the large compensation table with 4000 elements:

Offline, i.e. when neither a teaching routine nor compensation are taking place ‘online,' the individual elements of the large compensation table can be accessed using:

|Index:|Reading and writing using parameter P 440[0] - CON_TAB_TabIndex.|
|---|---|
|Value:|Reading and writing using parameter P 441[0] - CON_TAB_TabVal.|
| |Saving takes place in conjunction with the saving of the parameter record in the device’s mass memory (limitation of the max. number of storage cycles).|

# Additional Parameters

|(1)TeachEpsRS-1|= Teach epsrs commutation angle (electrical)|
|---|---|
|- F1:|Small teach table (250)|
|- F1:|Rotary, mapping: fixed 32-bit|
|- F1:|Without teaching direction|
|- F1:|Without offset and delta, with tuning, with fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(1)EPSRS|
| |àsmall CompTab (380)CON_TCoggAddTab|
|(2)TeachEpsRS-2|= Teach epsrs commutation angle (electrical)|
| |as for (1)TeachEpsRS-1|
|(5)TeachUserRefPos|=Teach (277)MPRO_FG_UserRef|
|Pos:|reference position in user units|
|- F2:|Big teach table (4000)|
|- F2:|Absolute, mapping via (443)CON_TAB_PosDelta|
|- F2:|With teaching direction|
|- F2:|Without offset and delta, with tuning, without fader|
|Calculation:|(385)CON_TCoggTeachCon=(3)CALC1|
|Compensation:|(382)CON_TCoggComp=(2)APSPOS|
| |àbig CompTab, access via (440) and (441)|
|(6)TeachEpsM|=Teach epsm mechanical angle (shaft)|

# Table 7.3: Settings for teaching, calculating and compensation

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 118

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

(385) __

# CON_TCoggTeachCon

Singleturn position from encoder for commutation

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachPosEncPcon

Teach posact from pcon encoder

Actual position from encoder for position control in reference value normalization, Scope-Signal 152

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPconEncPos

Teach (412)CON_PCON_ActPosition

Actual position from encoder for position control in reference value normalization

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachPosEncRed

Teach posact from redundant encoder

Actual position from so called redundant encoder in ref value normalization, Scope-Signal 153

- F2: Big teach table (4000)
- F2: Absolute, mapping via (443)CON_TAB_PosDelta
- F2: With teaching direction
- F2: Without offset and delta, with tuning, without fader

Calculation: (385)CON_TCoggTeachCon=(3)CALC1

Compensation: (382)CON_TCoggComp=(2)APSPOS

àbig CompTab, access via (440) and (441)

# TeachSTPosPcon

Teach singleturn position from position control

Singleturn position of position control

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441)

# TeachEpsRS-3

Teach epsrs commutation angle (electrical)

- F1: Big teach table (4000)
- F1: Rotary, mapping: fixed 32-bit
- F1: Without teaching direction
- F1: Without offset and delta, with tuning, with fader

Calculation: (385)CON_TCoggTeachCon=(8)CALC2

Compensation: (382)CON_TCoggComp=(3)EPSM

àbig CompTab, access via (440) and (441

# Table 7.3:

Settings for teaching, calculating and compensation (continue)

The compensation (feed forward control) is activated using parameter: P 382 [0] - CON_TCoggComp > 0.

# 7.3.5.3 Procedure for detent torque compensation

The following table shows the procedure for detent torque compensation.

MOOG
ID No.:CB40859-001
Date:11/2020

# 7 Control

|No.|Action|
|---|---|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|4|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement Set the input tuning if necessary using:|
|5|P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|6|Start control|
|7|Run motor at low speed (≤ 1 rpm) Set the position source for the teaching, activate teaching: Select|
|8|P 385[0] - CON_TCoggTeachCon > 0. àThe teaching routine begins (possibly only with PosStart, however).|
|9|Move at least 1 motor revolution in the same direction (internal filter time). With the control still operating, the teaching is then stopped by calling the|
|10|calculation function once: P 385[0] - CON_TCoggTeachCon = (3)CALC1 or (8)CALC2. Afterwards, parameter P 385[0] jumps back to READY(0).|

Table 7.4: Overall procedure for detent torque compensation

MSD ServoDrive - DeviceHelp 120

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# MSD ServoDrive - DeviceHelp

No. Action

- The teaching and calculation are thus finished.
- The position source used has been stored internally.
- The compensation table is available for use immediately.

# 11 Stop control

Start the compensation: P 382[0] - CON_TCoggComp &gt; 0

# 12

After this, the q-current feed forward control becomes active when the control is restarted.

Save device data.

# 13

The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.

Image 7.12: After enabling detent torque compensation (with) (please keep the Y axis scaling in mind!)
# 7.3.5.3.1 Scope recording: speed ‘before' and ‘after'

Possible monitoring via scope signal (69) isqref_comp [A]: ref. current from anti-cogging --> in ‘blue' here

A significant improvement in the speed progression is noticeable in the ‘yellow’ scope signal (13): nact [rpm]: cur. speed from filter.

Image 7.11: Before detent torque compensation (without)

# 7.3.5.4 Compensation as a function of the electrical angle

# 7.3.5.5 Compensation as a function of the absolute position

|EPSRS|ABSPOS|
|---|---|
|Teaching routine and compensation à small CompTab (250er)|Teaching routine and compensation à big CompTab (4000)|
|- Incremental, ‘rotary' recurring position|- Absolute, 'linear' continuous position|
|- Without offset and delta, with tuning, with fader|- With offset and delta, with tuning, without fader|
|- (1) Teach epsrs, commutation angle (electrical)|- (3) Teach (277)MPRO_FG_UserRefPos, reference position in user units|
|No. Action|- (7) Teach posact from pcon encoder, actual position from encoder for position control loop in reference scaling, scope signal 152|
| |- (9) Teach (412)CON_PCON_ActPosition, actual position of the position control in reference scaling|
| |- (10) Teach posact from pcon encoder, actual position from so-called redundant encoder in reference scaling, scope signal 153|
|1|Open manual mode window|
|2|Speed control mode control setting (set high rigidity, for smooth running)|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
|5|Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon = (1)TeachEpsRS-1.àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|---|Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the compensation table P 380 - CON_TCoggAddTab (small table with 250 elements).|
|8|Stop control|
| |Start the compensation: P 382[0] - CON_TCoggComp = (1)EPSRS|
|9|After this, the q-current feed forward control becomes active when the control is restarted. Save device data.|
|10|- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 122

# 7 Control

# MOOG

ID No.: CB40859-001 Date: 11/2020

# MSD ServoDrive - DeviceHelp

|No.|Action|
|---|---|
|1|Open manual mode window.|
|2|Approach start position|
|3|Speed control mode control setting (set high rigidity, for smooth running)|
|4|Set the teaching direction if necessary: P 445[0] - CON_TAB_TeachDir Default: POS(1)= teaching routine in positive direction.|
|5|Set the offset and delta if necessary using: P 442[0] - CON_TAB_PosStart, default 0 P 443[0] - CON_TAB_PosDelta, default 1000 inc/TabElement = e.g. (endpos inc - startpos inc) / 4000 elements|
|6|Set the input tuning if necessary using: P 447[0] - CON_TAB_Tune.TimeDelay, default 0 P 447[1] - CON_TAB_Tune.PosShift, default 0|
|7|Start control|
|8|Run motor at low speed (≤ 1 rpm). Set the position source for the teaching, activate teaching: Select P 385[0] - CON_TCoggTeachCon= (5)TeachUserRefPos or select|
|9|P 385[0] - CON_TCoggTeachCon= (7)TeachPosEncPcon or select P 385[0] - CON_TCoggTeachCon= (9)TeachPconActPos or select P 385[0] - CON_TCoggTeachCon= (10)TeachPosEncRed. à The teaching routine begins (but only with PosStart).|
|10|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
|11|P 385[0] - CON_TCoggTeachCon = (3)CALC1. This imports all values into the internal compensation table (big table with 4000 elements).|
|12|Stop control|
|13|Save device data. - The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner. Use the scope to monitor IsqRef_Comp|
|14|Compensation as a function of mechanical rotation (EPMS) - Incremental, ‘rotary' recurring position - Without offset and delta, with tuning, with fader - (6) Teach epsm mechanical angle (shaft), SingleTurn position from encoder for commutation - (11) Teach singleturn position from position control, SingleTurn position of the position control, + Homing + axis correction - (12) Teach epsrs, commutation angle (electrical)|

# No.  Action

|1|Open manual mode window|
|---|---|
|2|Set the speed control mode (set high stiffness, for radial true running) Set speed control mode.|
|3|Start control|
|4|Run motor at low speed (≤ 1 rpm).|
| |Set the position source for the teaching, activate teaching: Select|
|5|P 385[0] - CON_TCoggTeachCon = (6)TeachEpsMor select|
| |P 385[0] - CON_TCoggTeachCon = (11)TeachSTPosPcon. àThe teaching routine begins.|
|6|Wait until at least 1 motor revolution is completed in the teaching routine (internal filter time).|
| |Check P 440[0] - CON_TAB_TabIndex and P 446[0] - CON_TAB_OutVal|
| |With the control still operating, the teaching is then stopped by calling the calculation function once:|
|7|P 385[0] - CON_TCoggTeachCon = (8)CALC2. This imports all values into the internal compensation table (big table with 4000 elements).|
|8|Stop control|
|9|Start the compensation: P 382[0] - CON_TCoggComp = (3)EPSM|
|10|Save device data.|
| |- The position source used by the teaching is also saved here. It will later be used for the compensation once again in exactly the same manner.|
|11|Use the scope to monitor IsqRef_Comp|

# 7.3.5.7 Compensation as a function of the electrical angle (EPSRS), big table

Teaching routine and compensation à big CompTab (4000)

- Incremental, ‘rotary' recurring position
- Without offset and delta, with tuning, with fader

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 124

# 7 Control

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

# 7.3.5.8 FadeOut function

Adaptation of torque control / Saturation characteristic (see Section ""Adaptation of torque control"" on page 125).

At higher speeds it usually makes sense to linearly fade the Q-current feed forward control of the detent torque compensation using the FadeOut function:

- P 447[3] - CON_TAB_Tune[3].FadeOutStart: fader starting speed
- P 447[4] - CON_TAB_Tune[4].FadeOutEnd: fader ending speed.

FadeStartSpeed

|100 %|Rastmoment-|kompensation|cogging|compensation|
|---|---|---|---|---|
|0 %| | | | |

Image 7.15: Structure of expanded torque control

FadeEndSpeed

# 7.3.6 Advanced torque control

Torque control is expanded by three functions in order to optimize the control dynamics of the current and speed controllers.

# 7.3.6.1 Adaptation of torque control

# 7.3.6.1.1 Saturation characteristic

In the overload range, saturation effects reduce the inductance of many motors. As a result, the current controller optimized to the rated current may oscillate or become unstable. In this case the gain of the current controller should be adapted to the load case by way of four interpolation points. The values for the interpolation points are entered in the screen as a percentage of the rated current. On the left are the inductance values, and on the right the values for the overload (> 100% of rated current).

# Inductance [%]

|Index [0]|100 %|
|---|---|
|Index [1]|90 %|
|Index [2]|68 %|
|Index [3]|31 %|

# Rated current

|Irated [4]|Irated [6]|[%]|
|---|---|---|
|Irated [5]|Irated [7]| |

Image 7.16: “PS motor electrical parameters” screen

Image 7.17: Diagram: “Scaling of q-inductance L in [%]”

- ① P 472[0] - [3] Lsig_q@Ix Scaling of q-stator inductance in [%]; interpolation points 0 to 3.
- ② P 472[4] - [7] MOT_CurrentIx Scaling of rated current in [%]; interpolation points 4 to 7.

# Legend for Diagram: “Scaling of q-inductance L in [%]”

NOTE

l Between the interpolation points the scaling factor is interpolated in linear mode. The current scaling of the inductance is displayed in the scope variable 74_Is_ActVal.

MOOG ID No.",How is the current controller's gain adapted in the overload range in the MSD ServoDrive system?,"The gain is adapted using four interpolation points based on the percentage of rated current, adjusting for reduced inductance due to saturation effects.","Adaptation involves four interpolation points that modify the gain according to rated current percentage, compensating for inductance reduction from saturation.","In overload, the current controller's gain is adjusted via four interpolation points to account for inductance changes caused by saturation.","Saturation effects lower inductance, necessitating gain adjustment through four interpolation points relative to rated current percentage.","The system adapts the current controller's gain in overload by interpolating four points based on rated current, addressing inductance saturation effects."
