,NODE_FILE_NAME,NODE_NUMBER,NODE_HASH,NODE_TEXT,Q,A1,A2,A3,A4,A5
0,msd_servo_drive.txt,53,affb29182782826ccb882dd6107169065be22cb2e432b50d306edd4c5bb71ef7,"CAUTION! Your system/motor may be damaged if put into operation in an uncontrolled or inappropriate manner. Improper conduct can cause damage to your system/machine.

- When developing the project, care must be taken to ensure that the function “Save the large table to ROM"" is never carried out repeatedly or cyclically.
- The reason is that saving to the flash memory of the servo drive is subject to a limitation of the overall number of possible save operations.

MOOG ID No.:CB40859-001 Date:11/2020

# 7 Control

# 7.7.5.4 Deleting a table RAM

The table to be deleted must first be selected and can subsequently be deleted in your RAM cells.

1. Select the table:
2. Parameter P 421[2] - CON_FM_FW_TabIdx[2].Table select = [0, 1]

Delete the table:

# 7.7.5.5 Loading the large table via the controller’s file system

This procedure is only conceived for a special use case: the large LookUp Table (LUT) must be changed continuously during operation (in the RAM memory!). Consequently, the transfer procedure needs to run quickly.

The transfer of an individual LUT can then no longer be carried out via the parameter interface (see 2 sections ago) because that would take too long during the actively running process. The solution that has been created for this is the option of first transferring the entire large table via ftp as a *.bin file to the file system of the servo drive in its entirety and then to load it to the RAM cells of the large LUT by means of a “special command.""

The map fields for the LUT can be transferred from one or several .CSV files via a converter (PC program) to the target, which is the *.bin file. The proper formatting of the *.bin file can be obtained from the manufacturer.

The manufacturer may be able to provide one example of a PC converter program of this nature (“LookUpTabConverter.exe”). At the end of the preparation process, you will then have the targeted amount of different *.bin files for the process which will run later on.

MSD ServoDrive - DeviceHelp 154

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 155

The ‘special command’ for transferring the data of the large table from the controller’s file system to the RAM cells of the large LUT is:

Parameter P 2009[0] - COM_CFG_File = READ_LUT(15) (Read lookup table data file from RAM disk)

NOTE

Please contact the manufacturer for more information on this special function.

# 7.7.5.6 CRC redundancy check

One single checksum can be calculated for the entire large table.

Command for one-time calculation and saving of the checksum:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control = Tab-Crc-NewCalculation(2).

After successful calculation, the parameter automatically switches to the monitoring mode:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control == Tab-Crc-Monitoring(1).

The calculated checksum is stored in:

Parameter P 1965[3] - CON_FM_LUT_Para[3].LUT: Tab CRC value

Now parameter P1965 should be stored persistently in the device.

The checksum monitoring is carried out one time for each initialization, e.g. when the servo drive is started up.

If the checksum comparison returns a negative response, error 30-7 appears, see also section ""Error list"" on page 328.

# 7.7.5.7 Important scope variables in the Moog DRIVEADMINISTRATOR 5

The Moog DRIVEADMINISTRATOR 5 offers a series of useful scope signals for diagnosis and monitoring of the calculated or externally specified values, such as the LUT index currently in use for speed (Scope ID 150) or torque (Scope ID 151).

# 7.7.5.8 CRC algorithm and C functionality

Checksum calculation

The checksum should be of the type CRC16 generation related to CRC-CCITT.

- Type: CRC16 over one byte stream
- Polynomial: x16 + x12 + x5 + 1 which equals 1021h
- Starting value: FFFFh
- final XOR: A55Ah

# 7.7.6 Field-weakening of synchronous motor voltage controller

The voltage controller is superimposed onto the selected characteristic curve. When the voltage controller is used, a part of the available voltage is used as a control reserve. ",What precautions must be taken when developing a project to avoid damaging the servo drive's flash memory?,Ensure the function 'Save the large table to ROM' is not executed repeatedly or cyclically to prevent exceeding the flash memory's save operation limit.,"Avoid repeated or cyclic execution of saving to the flash memory, as it has a limited number of possible save operations.","To protect the flash memory, the project development must never repeatedly or cyclically perform the 'Save the large table to ROM' function.","The flash memory's durability can be compromised if 'Save the large table to ROM' is done repeatedly; hence, such actions must be avoided during project development.","Project developers should note that the servo drive's flash memory has a finite number of save operations, making it crucial to avoid repetitive or cyclic saves of large tables to ROM."
1,msd_servo_drive.txt,53,affb29182782826ccb882dd6107169065be22cb2e432b50d306edd4c5bb71ef7,"CAUTION! Your system/motor may be damaged if put into operation in an uncontrolled or inappropriate manner. Improper conduct can cause damage to your system/machine.

- When developing the project, care must be taken to ensure that the function “Save the large table to ROM"" is never carried out repeatedly or cyclically.
- The reason is that saving to the flash memory of the servo drive is subject to a limitation of the overall number of possible save operations.

MOOG ID No.:CB40859-001 Date:11/2020

# 7 Control

# 7.7.5.4 Deleting a table RAM

The table to be deleted must first be selected and can subsequently be deleted in your RAM cells.

1. Select the table:
2. Parameter P 421[2] - CON_FM_FW_TabIdx[2].Table select = [0, 1]

Delete the table:

# 7.7.5.5 Loading the large table via the controller’s file system

This procedure is only conceived for a special use case: the large LookUp Table (LUT) must be changed continuously during operation (in the RAM memory!). Consequently, the transfer procedure needs to run quickly.

The transfer of an individual LUT can then no longer be carried out via the parameter interface (see 2 sections ago) because that would take too long during the actively running process. The solution that has been created for this is the option of first transferring the entire large table via ftp as a *.bin file to the file system of the servo drive in its entirety and then to load it to the RAM cells of the large LUT by means of a “special command.""

The map fields for the LUT can be transferred from one or several .CSV files via a converter (PC program) to the target, which is the *.bin file. The proper formatting of the *.bin file can be obtained from the manufacturer.

The manufacturer may be able to provide one example of a PC converter program of this nature (“LookUpTabConverter.exe”). At the end of the preparation process, you will then have the targeted amount of different *.bin files for the process which will run later on.

MSD ServoDrive - DeviceHelp 154

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 155

The ‘special command’ for transferring the data of the large table from the controller’s file system to the RAM cells of the large LUT is:

Parameter P 2009[0] - COM_CFG_File = READ_LUT(15) (Read lookup table data file from RAM disk)

NOTE

Please contact the manufacturer for more information on this special function.

# 7.7.5.6 CRC redundancy check

One single checksum can be calculated for the entire large table.

Command for one-time calculation and saving of the checksum:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control = Tab-Crc-NewCalculation(2).

After successful calculation, the parameter automatically switches to the monitoring mode:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control == Tab-Crc-Monitoring(1).

The calculated checksum is stored in:

Parameter P 1965[3] - CON_FM_LUT_Para[3].LUT: Tab CRC value

Now parameter P1965 should be stored persistently in the device.

The checksum monitoring is carried out one time for each initialization, e.g. when the servo drive is started up.

If the checksum comparison returns a negative response, error 30-7 appears, see also section ""Error list"" on page 328.

# 7.7.5.7 Important scope variables in the Moog DRIVEADMINISTRATOR 5

The Moog DRIVEADMINISTRATOR 5 offers a series of useful scope signals for diagnosis and monitoring of the calculated or externally specified values, such as the LUT index currently in use for speed (Scope ID 150) or torque (Scope ID 151).

# 7.7.5.8 CRC algorithm and C functionality

Checksum calculation

The checksum should be of the type CRC16 generation related to CRC-CCITT.

- Type: CRC16 over one byte stream
- Polynomial: x16 + x12 + x5 + 1 which equals 1021h
- Starting value: FFFFh
- final XOR: A55Ah

# 7.7.6 Field-weakening of synchronous motor voltage controller

The voltage controller is superimposed onto the selected characteristic curve. When the voltage controller is used, a part of the available voltage is used as a control reserve. ",How can a table be deleted from the RAM cells according to the 'MSD ServoDrive - DeviceHelp' document?,"First, select the table to be deleted using Parameter P 421[2], then proceed to delete it from the RAM cells.",Deleting a table from RAM involves selecting it via CON_FM_FW_TabIdx[2].Table select and then removing it.,"The process requires selecting the table with P 421[2] - CON_FM_FW_TabIdx[2].Table select = [0, 1] before deletion.","To delete a table, it must be initially selected, followed by the deletion action in the RAM cells.","Selection through Parameter P 421[2] is the first step, after which the selected table can be deleted from RAM."
2,msd_servo_drive.txt,53,affb29182782826ccb882dd6107169065be22cb2e432b50d306edd4c5bb71ef7,"CAUTION! Your system/motor may be damaged if put into operation in an uncontrolled or inappropriate manner. Improper conduct can cause damage to your system/machine.

- When developing the project, care must be taken to ensure that the function “Save the large table to ROM"" is never carried out repeatedly or cyclically.
- The reason is that saving to the flash memory of the servo drive is subject to a limitation of the overall number of possible save operations.

MOOG ID No.:CB40859-001 Date:11/2020

# 7 Control

# 7.7.5.4 Deleting a table RAM

The table to be deleted must first be selected and can subsequently be deleted in your RAM cells.

1. Select the table:
2. Parameter P 421[2] - CON_FM_FW_TabIdx[2].Table select = [0, 1]

Delete the table:

# 7.7.5.5 Loading the large table via the controller’s file system

This procedure is only conceived for a special use case: the large LookUp Table (LUT) must be changed continuously during operation (in the RAM memory!). Consequently, the transfer procedure needs to run quickly.

The transfer of an individual LUT can then no longer be carried out via the parameter interface (see 2 sections ago) because that would take too long during the actively running process. The solution that has been created for this is the option of first transferring the entire large table via ftp as a *.bin file to the file system of the servo drive in its entirety and then to load it to the RAM cells of the large LUT by means of a “special command.""

The map fields for the LUT can be transferred from one or several .CSV files via a converter (PC program) to the target, which is the *.bin file. The proper formatting of the *.bin file can be obtained from the manufacturer.

The manufacturer may be able to provide one example of a PC converter program of this nature (“LookUpTabConverter.exe”). At the end of the preparation process, you will then have the targeted amount of different *.bin files for the process which will run later on.

MSD ServoDrive - DeviceHelp 154

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 155

The ‘special command’ for transferring the data of the large table from the controller’s file system to the RAM cells of the large LUT is:

Parameter P 2009[0] - COM_CFG_File = READ_LUT(15) (Read lookup table data file from RAM disk)

NOTE

Please contact the manufacturer for more information on this special function.

# 7.7.5.6 CRC redundancy check

One single checksum can be calculated for the entire large table.

Command for one-time calculation and saving of the checksum:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control = Tab-Crc-NewCalculation(2).

After successful calculation, the parameter automatically switches to the monitoring mode:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control == Tab-Crc-Monitoring(1).

The calculated checksum is stored in:

Parameter P 1965[3] - CON_FM_LUT_Para[3].LUT: Tab CRC value

Now parameter P1965 should be stored persistently in the device.

The checksum monitoring is carried out one time for each initialization, e.g. when the servo drive is started up.

If the checksum comparison returns a negative response, error 30-7 appears, see also section ""Error list"" on page 328.

# 7.7.5.7 Important scope variables in the Moog DRIVEADMINISTRATOR 5

The Moog DRIVEADMINISTRATOR 5 offers a series of useful scope signals for diagnosis and monitoring of the calculated or externally specified values, such as the LUT index currently in use for speed (Scope ID 150) or torque (Scope ID 151).

# 7.7.5.8 CRC algorithm and C functionality

Checksum calculation

The checksum should be of the type CRC16 generation related to CRC-CCITT.

- Type: CRC16 over one byte stream
- Polynomial: x16 + x12 + x5 + 1 which equals 1021h
- Starting value: FFFFh
- final XOR: A55Ah

# 7.7.6 Field-weakening of synchronous motor voltage controller

The voltage controller is superimposed onto the selected characteristic curve. When the voltage controller is used, a part of the available voltage is used as a control reserve. ",What is the special use case for loading the large LookUp Table (LUT) via the controller’s file system?,"It is designed for scenarios where the large LUT needs continuous changes during operation in RAM memory, requiring quick transfer procedures.","This method is intended for rapidly changing the large LUT in RAM during active operation, bypassing slower parameter interface transfers.","For operations demanding frequent updates to the large LUT in RAM, this procedure ensures swift data transfer.","The special use case involves modifying the large LUT continuously in RAM, necessitating fast transfer via the controller’s file system.","When the large LUT must be altered often during operation, this approach allows for quick loading directly into RAM."
3,msd_servo_drive.txt,53,affb29182782826ccb882dd6107169065be22cb2e432b50d306edd4c5bb71ef7,"CAUTION! Your system/motor may be damaged if put into operation in an uncontrolled or inappropriate manner. Improper conduct can cause damage to your system/machine.

- When developing the project, care must be taken to ensure that the function “Save the large table to ROM"" is never carried out repeatedly or cyclically.
- The reason is that saving to the flash memory of the servo drive is subject to a limitation of the overall number of possible save operations.

MOOG ID No.:CB40859-001 Date:11/2020

# 7 Control

# 7.7.5.4 Deleting a table RAM

The table to be deleted must first be selected and can subsequently be deleted in your RAM cells.

1. Select the table:
2. Parameter P 421[2] - CON_FM_FW_TabIdx[2].Table select = [0, 1]

Delete the table:

# 7.7.5.5 Loading the large table via the controller’s file system

This procedure is only conceived for a special use case: the large LookUp Table (LUT) must be changed continuously during operation (in the RAM memory!). Consequently, the transfer procedure needs to run quickly.

The transfer of an individual LUT can then no longer be carried out via the parameter interface (see 2 sections ago) because that would take too long during the actively running process. The solution that has been created for this is the option of first transferring the entire large table via ftp as a *.bin file to the file system of the servo drive in its entirety and then to load it to the RAM cells of the large LUT by means of a “special command.""

The map fields for the LUT can be transferred from one or several .CSV files via a converter (PC program) to the target, which is the *.bin file. The proper formatting of the *.bin file can be obtained from the manufacturer.

The manufacturer may be able to provide one example of a PC converter program of this nature (“LookUpTabConverter.exe”). At the end of the preparation process, you will then have the targeted amount of different *.bin files for the process which will run later on.

MSD ServoDrive - DeviceHelp 154

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 155

The ‘special command’ for transferring the data of the large table from the controller’s file system to the RAM cells of the large LUT is:

Parameter P 2009[0] - COM_CFG_File = READ_LUT(15) (Read lookup table data file from RAM disk)

NOTE

Please contact the manufacturer for more information on this special function.

# 7.7.5.6 CRC redundancy check

One single checksum can be calculated for the entire large table.

Command for one-time calculation and saving of the checksum:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control = Tab-Crc-NewCalculation(2).

After successful calculation, the parameter automatically switches to the monitoring mode:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control == Tab-Crc-Monitoring(1).

The calculated checksum is stored in:

Parameter P 1965[3] - CON_FM_LUT_Para[3].LUT: Tab CRC value

Now parameter P1965 should be stored persistently in the device.

The checksum monitoring is carried out one time for each initialization, e.g. when the servo drive is started up.

If the checksum comparison returns a negative response, error 30-7 appears, see also section ""Error list"" on page 328.

# 7.7.5.7 Important scope variables in the Moog DRIVEADMINISTRATOR 5

The Moog DRIVEADMINISTRATOR 5 offers a series of useful scope signals for diagnosis and monitoring of the calculated or externally specified values, such as the LUT index currently in use for speed (Scope ID 150) or torque (Scope ID 151).

# 7.7.5.8 CRC algorithm and C functionality

Checksum calculation

The checksum should be of the type CRC16 generation related to CRC-CCITT.

- Type: CRC16 over one byte stream
- Polynomial: x16 + x12 + x5 + 1 which equals 1021h
- Starting value: FFFFh
- final XOR: A55Ah

# 7.7.6 Field-weakening of synchronous motor voltage controller

The voltage controller is superimposed onto the selected characteristic curve. When the voltage controller is used, a part of the available voltage is used as a control reserve. ",What is the command for transferring the large table from the controller’s file system to the RAM cells of the large LUT?,Parameter P 2009[0] - COM_CFG_File = READ_LUT(15) is used to read the lookup table data file from the RAM disk.,The 'special command' is setting Parameter P 2009[0] to READ_LUT(15) for transferring the table to RAM.,READ_LUT(15) in Parameter P 2009[0] facilitates the transfer of the large table from the file system to RAM.,"To move the large table into RAM, execute the command READ_LUT(15) via Parameter P 2009[0].",Transferring the large table to RAM requires the READ_LUT(15) command in Parameter P 2009[0].
4,msd_servo_drive.txt,53,affb29182782826ccb882dd6107169065be22cb2e432b50d306edd4c5bb71ef7,"CAUTION! Your system/motor may be damaged if put into operation in an uncontrolled or inappropriate manner. Improper conduct can cause damage to your system/machine.

- When developing the project, care must be taken to ensure that the function “Save the large table to ROM"" is never carried out repeatedly or cyclically.
- The reason is that saving to the flash memory of the servo drive is subject to a limitation of the overall number of possible save operations.

MOOG ID No.:CB40859-001 Date:11/2020

# 7 Control

# 7.7.5.4 Deleting a table RAM

The table to be deleted must first be selected and can subsequently be deleted in your RAM cells.

1. Select the table:
2. Parameter P 421[2] - CON_FM_FW_TabIdx[2].Table select = [0, 1]

Delete the table:

# 7.7.5.5 Loading the large table via the controller’s file system

This procedure is only conceived for a special use case: the large LookUp Table (LUT) must be changed continuously during operation (in the RAM memory!). Consequently, the transfer procedure needs to run quickly.

The transfer of an individual LUT can then no longer be carried out via the parameter interface (see 2 sections ago) because that would take too long during the actively running process. The solution that has been created for this is the option of first transferring the entire large table via ftp as a *.bin file to the file system of the servo drive in its entirety and then to load it to the RAM cells of the large LUT by means of a “special command.""

The map fields for the LUT can be transferred from one or several .CSV files via a converter (PC program) to the target, which is the *.bin file. The proper formatting of the *.bin file can be obtained from the manufacturer.

The manufacturer may be able to provide one example of a PC converter program of this nature (“LookUpTabConverter.exe”). At the end of the preparation process, you will then have the targeted amount of different *.bin files for the process which will run later on.

MSD ServoDrive - DeviceHelp 154

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 155

The ‘special command’ for transferring the data of the large table from the controller’s file system to the RAM cells of the large LUT is:

Parameter P 2009[0] - COM_CFG_File = READ_LUT(15) (Read lookup table data file from RAM disk)

NOTE

Please contact the manufacturer for more information on this special function.

# 7.7.5.6 CRC redundancy check

One single checksum can be calculated for the entire large table.

Command for one-time calculation and saving of the checksum:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control = Tab-Crc-NewCalculation(2).

After successful calculation, the parameter automatically switches to the monitoring mode:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control == Tab-Crc-Monitoring(1).

The calculated checksum is stored in:

Parameter P 1965[3] - CON_FM_LUT_Para[3].LUT: Tab CRC value

Now parameter P1965 should be stored persistently in the device.

The checksum monitoring is carried out one time for each initialization, e.g. when the servo drive is started up.

If the checksum comparison returns a negative response, error 30-7 appears, see also section ""Error list"" on page 328.

# 7.7.5.7 Important scope variables in the Moog DRIVEADMINISTRATOR 5

The Moog DRIVEADMINISTRATOR 5 offers a series of useful scope signals for diagnosis and monitoring of the calculated or externally specified values, such as the LUT index currently in use for speed (Scope ID 150) or torque (Scope ID 151).

# 7.7.5.8 CRC algorithm and C functionality

Checksum calculation

The checksum should be of the type CRC16 generation related to CRC-CCITT.

- Type: CRC16 over one byte stream
- Polynomial: x16 + x12 + x5 + 1 which equals 1021h
- Starting value: FFFFh
- final XOR: A55Ah

# 7.7.6 Field-weakening of synchronous motor voltage controller

The voltage controller is superimposed onto the selected characteristic curve. When the voltage controller is used, a part of the available voltage is used as a control reserve. ",How is the CRC redundancy check performed for the large table?,"A single checksum is calculated for the entire table using Parameter P 1965[2] for calculation and monitoring, with the result stored in P 1965[3].","Perform a checksum calculation with P 1965[2] set to Tab-Crc-NewCalculation(2), then monitor with Tab-Crc-Monitoring(1), storing the checksum in P 1965[3].","Initiate checksum calculation via P 1965[2], which then switches to monitoring mode, with the checksum saved in P 1965[3].","The process involves calculating a checksum with P 1965[2], automatically switching to monitoring, and storing the result in P 1965[3].","For CRC check, calculate using P 1965[2], monitor the checksum, and store it persistently in P 1965[3]."
5,msd_servo_drive.txt,53,affb29182782826ccb882dd6107169065be22cb2e432b50d306edd4c5bb71ef7,"CAUTION! Your system/motor may be damaged if put into operation in an uncontrolled or inappropriate manner. Improper conduct can cause damage to your system/machine.

- When developing the project, care must be taken to ensure that the function “Save the large table to ROM"" is never carried out repeatedly or cyclically.
- The reason is that saving to the flash memory of the servo drive is subject to a limitation of the overall number of possible save operations.

MOOG ID No.:CB40859-001 Date:11/2020

# 7 Control

# 7.7.5.4 Deleting a table RAM

The table to be deleted must first be selected and can subsequently be deleted in your RAM cells.

1. Select the table:
2. Parameter P 421[2] - CON_FM_FW_TabIdx[2].Table select = [0, 1]

Delete the table:

# 7.7.5.5 Loading the large table via the controller’s file system

This procedure is only conceived for a special use case: the large LookUp Table (LUT) must be changed continuously during operation (in the RAM memory!). Consequently, the transfer procedure needs to run quickly.

The transfer of an individual LUT can then no longer be carried out via the parameter interface (see 2 sections ago) because that would take too long during the actively running process. The solution that has been created for this is the option of first transferring the entire large table via ftp as a *.bin file to the file system of the servo drive in its entirety and then to load it to the RAM cells of the large LUT by means of a “special command.""

The map fields for the LUT can be transferred from one or several .CSV files via a converter (PC program) to the target, which is the *.bin file. The proper formatting of the *.bin file can be obtained from the manufacturer.

The manufacturer may be able to provide one example of a PC converter program of this nature (“LookUpTabConverter.exe”). At the end of the preparation process, you will then have the targeted amount of different *.bin files for the process which will run later on.

MSD ServoDrive - DeviceHelp 154

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 155

The ‘special command’ for transferring the data of the large table from the controller’s file system to the RAM cells of the large LUT is:

Parameter P 2009[0] - COM_CFG_File = READ_LUT(15) (Read lookup table data file from RAM disk)

NOTE

Please contact the manufacturer for more information on this special function.

# 7.7.5.6 CRC redundancy check

One single checksum can be calculated for the entire large table.

Command for one-time calculation and saving of the checksum:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control = Tab-Crc-NewCalculation(2).

After successful calculation, the parameter automatically switches to the monitoring mode:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control == Tab-Crc-Monitoring(1).

The calculated checksum is stored in:

Parameter P 1965[3] - CON_FM_LUT_Para[3].LUT: Tab CRC value

Now parameter P1965 should be stored persistently in the device.

The checksum monitoring is carried out one time for each initialization, e.g. when the servo drive is started up.

If the checksum comparison returns a negative response, error 30-7 appears, see also section ""Error list"" on page 328.

# 7.7.5.7 Important scope variables in the Moog DRIVEADMINISTRATOR 5

The Moog DRIVEADMINISTRATOR 5 offers a series of useful scope signals for diagnosis and monitoring of the calculated or externally specified values, such as the LUT index currently in use for speed (Scope ID 150) or torque (Scope ID 151).

# 7.7.5.8 CRC algorithm and C functionality

Checksum calculation

The checksum should be of the type CRC16 generation related to CRC-CCITT.

- Type: CRC16 over one byte stream
- Polynomial: x16 + x12 + x5 + 1 which equals 1021h
- Starting value: FFFFh
- final XOR: A55Ah

# 7.7.6 Field-weakening of synchronous motor voltage controller

The voltage controller is superimposed onto the selected characteristic curve. When the voltage controller is used, a part of the available voltage is used as a control reserve. ",What happens if the checksum comparison during the CRC redundancy check fails?,"A negative checksum comparison results in error 30-7, as detailed in the 'Error list' on page 328.","Failure in checksum comparison triggers error 30-7, referenced in the document's error list.","Error 30-7 is displayed if the checksum does not match, indicating a failure in the CRC check.",The system reports error 30-7 when the checksum comparison is unsuccessful.,Unsuccessful checksum monitoring leads to the appearance of error code 30-7.
6,msd_servo_drive.txt,53,affb29182782826ccb882dd6107169065be22cb2e432b50d306edd4c5bb71ef7,"CAUTION! Your system/motor may be damaged if put into operation in an uncontrolled or inappropriate manner. Improper conduct can cause damage to your system/machine.

- When developing the project, care must be taken to ensure that the function “Save the large table to ROM"" is never carried out repeatedly or cyclically.
- The reason is that saving to the flash memory of the servo drive is subject to a limitation of the overall number of possible save operations.

MOOG ID No.:CB40859-001 Date:11/2020

# 7 Control

# 7.7.5.4 Deleting a table RAM

The table to be deleted must first be selected and can subsequently be deleted in your RAM cells.

1. Select the table:
2. Parameter P 421[2] - CON_FM_FW_TabIdx[2].Table select = [0, 1]

Delete the table:

# 7.7.5.5 Loading the large table via the controller’s file system

This procedure is only conceived for a special use case: the large LookUp Table (LUT) must be changed continuously during operation (in the RAM memory!). Consequently, the transfer procedure needs to run quickly.

The transfer of an individual LUT can then no longer be carried out via the parameter interface (see 2 sections ago) because that would take too long during the actively running process. The solution that has been created for this is the option of first transferring the entire large table via ftp as a *.bin file to the file system of the servo drive in its entirety and then to load it to the RAM cells of the large LUT by means of a “special command.""

The map fields for the LUT can be transferred from one or several .CSV files via a converter (PC program) to the target, which is the *.bin file. The proper formatting of the *.bin file can be obtained from the manufacturer.

The manufacturer may be able to provide one example of a PC converter program of this nature (“LookUpTabConverter.exe”). At the end of the preparation process, you will then have the targeted amount of different *.bin files for the process which will run later on.

MSD ServoDrive - DeviceHelp 154

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 155

The ‘special command’ for transferring the data of the large table from the controller’s file system to the RAM cells of the large LUT is:

Parameter P 2009[0] - COM_CFG_File = READ_LUT(15) (Read lookup table data file from RAM disk)

NOTE

Please contact the manufacturer for more information on this special function.

# 7.7.5.6 CRC redundancy check

One single checksum can be calculated for the entire large table.

Command for one-time calculation and saving of the checksum:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control = Tab-Crc-NewCalculation(2).

After successful calculation, the parameter automatically switches to the monitoring mode:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control == Tab-Crc-Monitoring(1).

The calculated checksum is stored in:

Parameter P 1965[3] - CON_FM_LUT_Para[3].LUT: Tab CRC value

Now parameter P1965 should be stored persistently in the device.

The checksum monitoring is carried out one time for each initialization, e.g. when the servo drive is started up.

If the checksum comparison returns a negative response, error 30-7 appears, see also section ""Error list"" on page 328.

# 7.7.5.7 Important scope variables in the Moog DRIVEADMINISTRATOR 5

The Moog DRIVEADMINISTRATOR 5 offers a series of useful scope signals for diagnosis and monitoring of the calculated or externally specified values, such as the LUT index currently in use for speed (Scope ID 150) or torque (Scope ID 151).

# 7.7.5.8 CRC algorithm and C functionality

Checksum calculation

The checksum should be of the type CRC16 generation related to CRC-CCITT.

- Type: CRC16 over one byte stream
- Polynomial: x16 + x12 + x5 + 1 which equals 1021h
- Starting value: FFFFh
- final XOR: A55Ah

# 7.7.6 Field-weakening of synchronous motor voltage controller

The voltage controller is superimposed onto the selected characteristic curve. When the voltage controller is used, a part of the available voltage is used as a control reserve. ",What scope signals does the Moog DRIVEADMINISTRATOR 5 offer for LUT monitoring?,It provides scope signals like the LUT index currently in use for speed (Scope ID 150) or torque (Scope ID 151).,"Scope signals include IDs 150 and 151 for monitoring the current LUT index for speed and torque, respectively.","For diagnostics, Scope ID 150 tracks speed LUT index, and Scope ID 151 tracks torque LUT index.","The tool offers diagnostic signals, specifically Scope IDs 150 and 151, for LUT index monitoring.",Monitoring LUT indices for speed and torque is facilitated through Scope IDs 150 and 151 in Moog DRIVEADMINISTRATOR 5.
7,msd_servo_drive.txt,53,affb29182782826ccb882dd6107169065be22cb2e432b50d306edd4c5bb71ef7,"CAUTION! Your system/motor may be damaged if put into operation in an uncontrolled or inappropriate manner. Improper conduct can cause damage to your system/machine.

- When developing the project, care must be taken to ensure that the function “Save the large table to ROM"" is never carried out repeatedly or cyclically.
- The reason is that saving to the flash memory of the servo drive is subject to a limitation of the overall number of possible save operations.

MOOG ID No.:CB40859-001 Date:11/2020

# 7 Control

# 7.7.5.4 Deleting a table RAM

The table to be deleted must first be selected and can subsequently be deleted in your RAM cells.

1. Select the table:
2. Parameter P 421[2] - CON_FM_FW_TabIdx[2].Table select = [0, 1]

Delete the table:

# 7.7.5.5 Loading the large table via the controller’s file system

This procedure is only conceived for a special use case: the large LookUp Table (LUT) must be changed continuously during operation (in the RAM memory!). Consequently, the transfer procedure needs to run quickly.

The transfer of an individual LUT can then no longer be carried out via the parameter interface (see 2 sections ago) because that would take too long during the actively running process. The solution that has been created for this is the option of first transferring the entire large table via ftp as a *.bin file to the file system of the servo drive in its entirety and then to load it to the RAM cells of the large LUT by means of a “special command.""

The map fields for the LUT can be transferred from one or several .CSV files via a converter (PC program) to the target, which is the *.bin file. The proper formatting of the *.bin file can be obtained from the manufacturer.

The manufacturer may be able to provide one example of a PC converter program of this nature (“LookUpTabConverter.exe”). At the end of the preparation process, you will then have the targeted amount of different *.bin files for the process which will run later on.

MSD ServoDrive - DeviceHelp 154

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 155

The ‘special command’ for transferring the data of the large table from the controller’s file system to the RAM cells of the large LUT is:

Parameter P 2009[0] - COM_CFG_File = READ_LUT(15) (Read lookup table data file from RAM disk)

NOTE

Please contact the manufacturer for more information on this special function.

# 7.7.5.6 CRC redundancy check

One single checksum can be calculated for the entire large table.

Command for one-time calculation and saving of the checksum:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control = Tab-Crc-NewCalculation(2).

After successful calculation, the parameter automatically switches to the monitoring mode:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control == Tab-Crc-Monitoring(1).

The calculated checksum is stored in:

Parameter P 1965[3] - CON_FM_LUT_Para[3].LUT: Tab CRC value

Now parameter P1965 should be stored persistently in the device.

The checksum monitoring is carried out one time for each initialization, e.g. when the servo drive is started up.

If the checksum comparison returns a negative response, error 30-7 appears, see also section ""Error list"" on page 328.

# 7.7.5.7 Important scope variables in the Moog DRIVEADMINISTRATOR 5

The Moog DRIVEADMINISTRATOR 5 offers a series of useful scope signals for diagnosis and monitoring of the calculated or externally specified values, such as the LUT index currently in use for speed (Scope ID 150) or torque (Scope ID 151).

# 7.7.5.8 CRC algorithm and C functionality

Checksum calculation

The checksum should be of the type CRC16 generation related to CRC-CCITT.

- Type: CRC16 over one byte stream
- Polynomial: x16 + x12 + x5 + 1 which equals 1021h
- Starting value: FFFFh
- final XOR: A55Ah

# 7.7.6 Field-weakening of synchronous motor voltage controller

The voltage controller is superimposed onto the selected characteristic curve. When the voltage controller is used, a part of the available voltage is used as a control reserve. ",What are the specifications for the CRC16 algorithm used in checksum calculation?,"It uses CRC-CCITT with polynomial x16 + x12 + x5 + 1 (1021h), starting value FFFFh, and final XOR A55Ah.","The algorithm is CRC16 over a byte stream, polynomial 1021h, initial value FFFFh, and final XOR A55Ah.","Specifications include polynomial 1021h, starting at FFFFh, and applying a final XOR of A55Ah.","CRC16 algorithm details: polynomial 1021h, initial FFFFh, and final XOR A55Ah for checksum calculation.","For checksum, apply CRC16 with polynomial 1021h, start with FFFFh, and end with XOR A55Ah."
8,msd_servo_drive.txt,53,affb29182782826ccb882dd6107169065be22cb2e432b50d306edd4c5bb71ef7,"CAUTION! Your system/motor may be damaged if put into operation in an uncontrolled or inappropriate manner. Improper conduct can cause damage to your system/machine.

- When developing the project, care must be taken to ensure that the function “Save the large table to ROM"" is never carried out repeatedly or cyclically.
- The reason is that saving to the flash memory of the servo drive is subject to a limitation of the overall number of possible save operations.

MOOG ID No.:CB40859-001 Date:11/2020

# 7 Control

# 7.7.5.4 Deleting a table RAM

The table to be deleted must first be selected and can subsequently be deleted in your RAM cells.

1. Select the table:
2. Parameter P 421[2] - CON_FM_FW_TabIdx[2].Table select = [0, 1]

Delete the table:

# 7.7.5.5 Loading the large table via the controller’s file system

This procedure is only conceived for a special use case: the large LookUp Table (LUT) must be changed continuously during operation (in the RAM memory!). Consequently, the transfer procedure needs to run quickly.

The transfer of an individual LUT can then no longer be carried out via the parameter interface (see 2 sections ago) because that would take too long during the actively running process. The solution that has been created for this is the option of first transferring the entire large table via ftp as a *.bin file to the file system of the servo drive in its entirety and then to load it to the RAM cells of the large LUT by means of a “special command.""

The map fields for the LUT can be transferred from one or several .CSV files via a converter (PC program) to the target, which is the *.bin file. The proper formatting of the *.bin file can be obtained from the manufacturer.

The manufacturer may be able to provide one example of a PC converter program of this nature (“LookUpTabConverter.exe”). At the end of the preparation process, you will then have the targeted amount of different *.bin files for the process which will run later on.

MSD ServoDrive - DeviceHelp 154

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 155

The ‘special command’ for transferring the data of the large table from the controller’s file system to the RAM cells of the large LUT is:

Parameter P 2009[0] - COM_CFG_File = READ_LUT(15) (Read lookup table data file from RAM disk)

NOTE

Please contact the manufacturer for more information on this special function.

# 7.7.5.6 CRC redundancy check

One single checksum can be calculated for the entire large table.

Command for one-time calculation and saving of the checksum:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control = Tab-Crc-NewCalculation(2).

After successful calculation, the parameter automatically switches to the monitoring mode:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control == Tab-Crc-Monitoring(1).

The calculated checksum is stored in:

Parameter P 1965[3] - CON_FM_LUT_Para[3].LUT: Tab CRC value

Now parameter P1965 should be stored persistently in the device.

The checksum monitoring is carried out one time for each initialization, e.g. when the servo drive is started up.

If the checksum comparison returns a negative response, error 30-7 appears, see also section ""Error list"" on page 328.

# 7.7.5.7 Important scope variables in the Moog DRIVEADMINISTRATOR 5

The Moog DRIVEADMINISTRATOR 5 offers a series of useful scope signals for diagnosis and monitoring of the calculated or externally specified values, such as the LUT index currently in use for speed (Scope ID 150) or torque (Scope ID 151).

# 7.7.5.8 CRC algorithm and C functionality

Checksum calculation

The checksum should be of the type CRC16 generation related to CRC-CCITT.

- Type: CRC16 over one byte stream
- Polynomial: x16 + x12 + x5 + 1 which equals 1021h
- Starting value: FFFFh
- final XOR: A55Ah

# 7.7.6 Field-weakening of synchronous motor voltage controller

The voltage controller is superimposed onto the selected characteristic curve. When the voltage controller is used, a part of the available voltage is used as a control reserve. ",What is the role of the voltage controller in the field-weakening of synchronous motor voltage controller?,"It is superimposed onto the selected characteristic curve, using part of the available voltage as a control reserve.","The voltage controller overlays the characteristic curve, allocating some voltage for control purposes.","Superimposed on the curve, it reserves a portion of the voltage for control in field-weakening scenarios.","It acts above the characteristic curve, utilizing available voltage partly as a reserve for control.","In field-weakening, it's added to the curve, setting aside voltage for control reserve."
9,msd_servo_drive.txt,53,affb29182782826ccb882dd6107169065be22cb2e432b50d306edd4c5bb71ef7,"CAUTION! Your system/motor may be damaged if put into operation in an uncontrolled or inappropriate manner. Improper conduct can cause damage to your system/machine.

- When developing the project, care must be taken to ensure that the function “Save the large table to ROM"" is never carried out repeatedly or cyclically.
- The reason is that saving to the flash memory of the servo drive is subject to a limitation of the overall number of possible save operations.

MOOG ID No.:CB40859-001 Date:11/2020

# 7 Control

# 7.7.5.4 Deleting a table RAM

The table to be deleted must first be selected and can subsequently be deleted in your RAM cells.

1. Select the table:
2. Parameter P 421[2] - CON_FM_FW_TabIdx[2].Table select = [0, 1]

Delete the table:

# 7.7.5.5 Loading the large table via the controller’s file system

This procedure is only conceived for a special use case: the large LookUp Table (LUT) must be changed continuously during operation (in the RAM memory!). Consequently, the transfer procedure needs to run quickly.

The transfer of an individual LUT can then no longer be carried out via the parameter interface (see 2 sections ago) because that would take too long during the actively running process. The solution that has been created for this is the option of first transferring the entire large table via ftp as a *.bin file to the file system of the servo drive in its entirety and then to load it to the RAM cells of the large LUT by means of a “special command.""

The map fields for the LUT can be transferred from one or several .CSV files via a converter (PC program) to the target, which is the *.bin file. The proper formatting of the *.bin file can be obtained from the manufacturer.

The manufacturer may be able to provide one example of a PC converter program of this nature (“LookUpTabConverter.exe”). At the end of the preparation process, you will then have the targeted amount of different *.bin files for the process which will run later on.

MSD ServoDrive - DeviceHelp 154

# 7 Control

MOOG ID No.:CB40859-001 Date:11/2020

MSD ServoDrive - DeviceHelp 155

The ‘special command’ for transferring the data of the large table from the controller’s file system to the RAM cells of the large LUT is:

Parameter P 2009[0] - COM_CFG_File = READ_LUT(15) (Read lookup table data file from RAM disk)

NOTE

Please contact the manufacturer for more information on this special function.

# 7.7.5.6 CRC redundancy check

One single checksum can be calculated for the entire large table.

Command for one-time calculation and saving of the checksum:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control = Tab-Crc-NewCalculation(2).

After successful calculation, the parameter automatically switches to the monitoring mode:

Parameter P 1965[2] - CON_FM_LUT_Para[2].LUT: Tab CRC control == Tab-Crc-Monitoring(1).

The calculated checksum is stored in:

Parameter P 1965[3] - CON_FM_LUT_Para[3].LUT: Tab CRC value

Now parameter P1965 should be stored persistently in the device.

The checksum monitoring is carried out one time for each initialization, e.g. when the servo drive is started up.

If the checksum comparison returns a negative response, error 30-7 appears, see also section ""Error list"" on page 328.

# 7.7.5.7 Important scope variables in the Moog DRIVEADMINISTRATOR 5

The Moog DRIVEADMINISTRATOR 5 offers a series of useful scope signals for diagnosis and monitoring of the calculated or externally specified values, such as the LUT index currently in use for speed (Scope ID 150) or torque (Scope ID 151).

# 7.7.5.8 CRC algorithm and C functionality

Checksum calculation

The checksum should be of the type CRC16 generation related to CRC-CCITT.

- Type: CRC16 over one byte stream
- Polynomial: x16 + x12 + x5 + 1 which equals 1021h
- Starting value: FFFFh
- final XOR: A55Ah

# 7.7.6 Field-weakening of synchronous motor voltage controller

The voltage controller is superimposed onto the selected characteristic curve. When the voltage controller is used, a part of the available voltage is used as a control reserve. ",Where can one find more information about the special function of transferring the large table to RAM?,Contact the manufacturer for additional details on the special function of loading the large table to RAM.,"For further information regarding this special function, reaching out to the manufacturer is recommended.",The manufacturer is the source for more information on the large table transfer to RAM.,Additional details about this functionality can be obtained directly from the manufacturer.,Manufacturer consultation is advised for comprehensive understanding of the large table RAM transfer feature.
